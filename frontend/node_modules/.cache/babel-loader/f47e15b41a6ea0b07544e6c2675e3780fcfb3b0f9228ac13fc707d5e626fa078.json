{"ast":null,"code":"var _jsxFileName = \"/Users/wilderbaldwin/Dev/tragen/frontend/src/components/TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { createChart, ColorType, CrosshairMode, LineStyle, PriceScaleMode } from 'lightweight-charts';\nimport { Cog6ToothIcon, ChartBarIcon, PlayIcon, PauseIcon, MagnifyingGlassIcon, PlusIcon, EyeIcon, EyeSlashIcon, AdjustmentsHorizontalIcon } from '@heroicons/react/24/outline';\nimport DynamicSymbolSearch from './DynamicSymbolSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingChart = ({\n  symbol = 'NQ=F',\n  displaySymbol = 'NQ',\n  height = 600,\n  apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000',\n  onSignalReceived,\n  onSymbolChange,\n  onChartDataUpdate\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const volumeSeriesRef = useRef(null);\n  const indicatorSeriesRefs = useRef({});\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [showSymbolSearch, setShowSymbolSearch] = useState(false);\n  const [timeframe, setTimeframe] = useState('1d');\n  const [selectedPeriod, setSelectedPeriod] = useState('1mo');\n  const [chartType, setChartType] = useState('candlestick');\n  const [showDrawingTools, setShowDrawingTools] = useState(false);\n  const [showIndicatorSearch, setShowIndicatorSearch] = useState(false);\n  const [indicatorSearchTerm, setIndicatorSearchTerm] = useState('');\n  const [indicators, setIndicators] = useState({\n    sma20: {\n      enabled: true,\n      visible: true,\n      color: '#f59e0b',\n      period: 20\n    },\n    sma50: {\n      enabled: true,\n      visible: true,\n      color: '#8b5cf6',\n      period: 50\n    },\n    ema12: {\n      enabled: false,\n      visible: true,\n      color: '#06b6d4',\n      period: 12\n    },\n    ema26: {\n      enabled: false,\n      visible: true,\n      color: '#f97316',\n      period: 26\n    },\n    rsi: {\n      enabled: false,\n      visible: true,\n      color: '#a855f7',\n      period: 14,\n      overbought: 70,\n      oversold: 30\n    },\n    macd: {\n      enabled: false,\n      visible: true,\n      color: '#10b981',\n      fastPeriod: 12,\n      slowPeriod: 26,\n      signalPeriod: 9\n    },\n    bollinger: {\n      enabled: false,\n      visible: true,\n      color: '#ef4444',\n      period: 20,\n      stdDev: 2\n    },\n    volume: {\n      enabled: true,\n      visible: true,\n      color: '#6b7280'\n    },\n    stochastic: {\n      enabled: false,\n      visible: true,\n      color: '#ec4899',\n      kPeriod: 14,\n      dPeriod: 3\n    },\n    williams: {\n      enabled: false,\n      visible: true,\n      color: '#84cc16',\n      period: 14\n    },\n    atr: {\n      enabled: false,\n      visible: true,\n      color: '#f59e0b',\n      period: 14\n    },\n    adx: {\n      enabled: false,\n      visible: true,\n      color: '#6366f1',\n      period: 14\n    }\n  });\n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [priceChange, setPriceChange] = useState(0);\n  const [limitOrders, setLimitOrders] = useState([]);\n  const [lastUpdateTime, setLastUpdateTime] = useState(0);\n\n  // Candlestick timeframes (intervals)\n  const timeframes = [{\n    value: '1m',\n    label: '1 min',\n    seconds: 60\n  }, {\n    value: '3m',\n    label: '3 min',\n    seconds: 180\n  }, {\n    value: '5m',\n    label: '5 min',\n    seconds: 300\n  }, {\n    value: '15m',\n    label: '15 min',\n    seconds: 900\n  }, {\n    value: '30m',\n    label: '30 min',\n    seconds: 1800\n  }, {\n    value: '1h',\n    label: '1 hour',\n    seconds: 3600\n  }, {\n    value: '2h',\n    label: '2 hour',\n    seconds: 7200\n  }, {\n    value: '4h',\n    label: '4 hour',\n    seconds: 14400\n  }, {\n    value: '6h',\n    label: '6 hour',\n    seconds: 21600\n  }, {\n    value: '12h',\n    label: '12 hour',\n    seconds: 43200\n  }, {\n    value: '1d',\n    label: 'Day',\n    seconds: 86400\n  }, {\n    value: '1wk',\n    label: 'Week',\n    seconds: 604800\n  }, {\n    value: '1mo',\n    label: 'Month',\n    seconds: 2629746\n  }];\n\n  // Period selection options for manual data loading\n  const periodOptions = [{\n    value: '1d',\n    label: '1D',\n    description: 'Last day'\n  }, {\n    value: '5d',\n    label: '5D',\n    description: 'Last 5 days'\n  }, {\n    value: '1mo',\n    label: '1M',\n    description: 'Last month'\n  }, {\n    value: '3mo',\n    label: '3M',\n    description: 'Last 3 months'\n  }, {\n    value: '6mo',\n    label: '6M',\n    description: 'Last 6 months'\n  }, {\n    value: '1y',\n    label: '1Y',\n    description: 'Last year'\n  }, {\n    value: '2y',\n    label: '2Y',\n    description: 'Last 2 years'\n  }, {\n    value: '5y',\n    label: '5Y',\n    description: 'Last 5 years'\n  }, {\n    value: 'max',\n    label: 'ALL',\n    description: 'All available data'\n  }];\n\n  // Comprehensive TradingView-style indicators including popular public ones\n  const availableIndicators = [\n  // Built-in Technical Indicators\n  {\n    key: 'sma20',\n    name: 'Simple Moving Average (20)',\n    category: 'Moving Averages',\n    author: 'Built-in'\n  }, {\n    key: 'sma50',\n    name: 'Simple Moving Average (50)',\n    category: 'Moving Averages',\n    author: 'Built-in'\n  }, {\n    key: 'ema12',\n    name: 'Exponential Moving Average (12)',\n    category: 'Moving Averages',\n    author: 'Built-in'\n  }, {\n    key: 'ema26',\n    name: 'Exponential Moving Average (26)',\n    category: 'Moving Averages',\n    author: 'Built-in'\n  }, {\n    key: 'rsi',\n    name: 'Relative Strength Index',\n    category: 'Oscillators',\n    author: 'Built-in'\n  }, {\n    key: 'macd',\n    name: 'MACD',\n    category: 'Oscillators',\n    author: 'Built-in'\n  }, {\n    key: 'bollinger',\n    name: 'Bollinger Bands',\n    category: 'Volatility',\n    author: 'Built-in'\n  }, {\n    key: 'stochastic',\n    name: 'Stochastic Oscillator',\n    category: 'Oscillators',\n    author: 'Built-in'\n  }, {\n    key: 'williams',\n    name: 'Williams %R',\n    category: 'Oscillators',\n    author: 'Built-in'\n  }, {\n    key: 'atr',\n    name: 'Average True Range',\n    category: 'Volatility',\n    author: 'Built-in'\n  }, {\n    key: 'adx',\n    name: 'Average Directional Index',\n    category: 'Trend',\n    author: 'Built-in'\n  }, {\n    key: 'volume',\n    name: 'Volume',\n    category: 'Volume',\n    author: 'Built-in'\n  },\n  // Popular Public TradingView Indicators\n  {\n    key: 'supertrend',\n    name: 'SuperTrend',\n    category: 'Trend',\n    author: '@KivancOzbilgic'\n  }, {\n    key: 'vwap',\n    name: 'Volume Weighted Average Price',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'ichimoku',\n    name: 'Ichimoku Cloud',\n    category: 'Trend',\n    author: 'Built-in'\n  }, {\n    key: 'emas_ribbon',\n    name: 'EMA Ribbon (8 EMAs)',\n    category: 'Moving Averages',\n    author: '@everget'\n  }, {\n    key: 'squeeze_momentum',\n    name: 'Squeeze Momentum',\n    category: 'Momentum',\n    author: '@LazyBear'\n  }, {\n    key: 'wave_trend',\n    name: 'WaveTrend Oscillator',\n    category: 'Oscillators',\n    author: '@LazyBear'\n  }, {\n    key: 'ssl_channels',\n    name: 'SSL Channels',\n    category: 'Trend',\n    author: '@ErwinBeckers'\n  }, {\n    key: 'fibonacci_retracement',\n    name: 'Auto Fibonacci Retracement',\n    category: 'Support/Resistance',\n    author: '@LonesomeTheBlue'\n  }, {\n    key: 'pivot_points',\n    name: 'Pivot Points Standard',\n    category: 'Support/Resistance',\n    author: 'Built-in'\n  }, {\n    key: 'market_structure',\n    name: 'Market Structure Break & Order Block',\n    category: 'Price Action',\n    author: '@LuxAlgo'\n  }, {\n    key: 'smart_money_concepts',\n    name: 'Smart Money Concepts',\n    category: 'Price Action',\n    author: '@LuxAlgo'\n  }, {\n    key: 'order_blocks',\n    name: 'Order Blocks',\n    category: 'Price Action',\n    author: '@LuxAlgo'\n  }, {\n    key: 'fair_value_gaps',\n    name: 'Fair Value Gaps (FVG)',\n    category: 'Price Action',\n    author: '@LuxAlgo'\n  }, {\n    key: 'volume_profile',\n    name: 'Volume Profile',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'renko',\n    name: 'Renko Chart',\n    category: 'Chart Types',\n    author: 'Built-in'\n  }, {\n    key: 'heikin_ashi',\n    name: 'Heikin Ashi',\n    category: 'Chart Types',\n    author: 'Built-in'\n  }, {\n    key: 'divergence_indicator',\n    name: 'RSI Divergence',\n    category: 'Divergence',\n    author: '@ricardosantos'\n  }, {\n    key: 'elder_ray',\n    name: 'Elder Ray Index',\n    category: 'Momentum',\n    author: '@everget'\n  }, {\n    key: 'money_flow_index',\n    name: 'Money Flow Index (MFI)',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'commodity_channel',\n    name: 'Commodity Channel Index (CCI)',\n    category: 'Momentum',\n    author: 'Built-in'\n  }, {\n    key: 'parabolic_sar',\n    name: 'Parabolic SAR',\n    category: 'Trend',\n    author: 'Built-in'\n  }, {\n    key: 'keltner_channels',\n    name: 'Keltner Channels',\n    category: 'Volatility',\n    author: 'Built-in'\n  }, {\n    key: 'donchian_channels',\n    name: 'Donchian Channels',\n    category: 'Volatility',\n    author: 'Built-in'\n  }, {\n    key: 'schaff_trend',\n    name: 'Schaff Trend Cycle',\n    category: 'Trend',\n    author: '@everget'\n  }, {\n    key: 'chaikin_oscillator',\n    name: 'Chaikin Oscillator',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'price_volume_trend',\n    name: 'Price Volume Trend (PVT)',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'trix',\n    name: 'TRIX',\n    category: 'Momentum',\n    author: 'Built-in'\n  }, {\n    key: 'ultimate_oscillator',\n    name: 'Ultimate Oscillator',\n    category: 'Momentum',\n    author: 'Built-in'\n  }, {\n    key: 'chande_momentum',\n    name: 'Chande Momentum Oscillator',\n    category: 'Momentum',\n    author: 'Built-in'\n  }, {\n    key: 'mass_index',\n    name: 'Mass Index',\n    category: 'Volatility',\n    author: 'Built-in'\n  }, {\n    key: 'vortex',\n    name: 'Vortex Indicator',\n    category: 'Trend',\n    author: 'Built-in'\n  }, {\n    key: 'accumulation_distribution',\n    name: 'Accumulation/Distribution Line',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'on_balance_volume',\n    name: 'On Balance Volume (OBV)',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'ease_of_movement',\n    name: 'Ease of Movement',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'negative_volume_index',\n    name: 'Negative Volume Index',\n    category: 'Volume',\n    author: 'Built-in'\n  }, {\n    key: 'positive_volume_index',\n    name: 'Positive Volume Index',\n    category: 'Volume',\n    author: 'Built-in'\n  }];\n\n  // Initialize chart\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: {\n          type: ColorType.Solid,\n          color: '#0a0a0b'\n        },\n        textColor: '#f9fafb',\n        fontSize: 12,\n        fontFamily: 'Trebuchet MS'\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(55, 65, 81, 0.5)',\n          style: LineStyle.Dotted\n        },\n        horzLines: {\n          color: 'rgba(55, 65, 81, 0.5)',\n          style: LineStyle.Dotted\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n        vertLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6'\n        },\n        horzLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6'\n        }\n      },\n      rightPriceScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        entireTextOnly: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25\n        }\n      },\n      leftPriceScale: {\n        visible: false\n      },\n      timeScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = new Date(time * 1000);\n          return date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          });\n        }\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: height,\n      handleScroll: {\n        mouseWheel: true,\n        pressedMouseMove: true,\n        horzTouchDrag: true,\n        vertTouchDrag: true\n      },\n      handleScale: {\n        axisPressedMouseMove: true,\n        mouseWheel: true,\n        pinch: true\n      }\n    });\n    chartRef.current = chart;\n\n    // Main price series\n    let mainSeries;\n    if (chartType === 'candlestick') {\n      mainSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350'\n      });\n    } else if (chartType === 'line') {\n      mainSeries = chart.addLineSeries({\n        color: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n        crosshairMarkerRadius: 6,\n        crosshairMarkerBorderColor: '#14b8a6',\n        crosshairMarkerBackgroundColor: '#14b8a6'\n      });\n    } else if (chartType === 'area') {\n      mainSeries = chart.addAreaSeries({\n        topColor: 'rgba(20, 184, 166, 0.4)',\n        bottomColor: 'rgba(20, 184, 166, 0.0)',\n        lineColor: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true\n      });\n    }\n    candlestickSeriesRef.current = mainSeries;\n\n    // Volume series\n    const volumeSeries = chart.addHistogramSeries({\n      color: 'rgba(107, 114, 128, 0.8)',\n      priceFormat: {\n        type: 'volume'\n      },\n      priceScaleId: 'volume'\n    });\n    volumeSeriesRef.current = volumeSeries;\n\n    // Set up volume price scale\n    chart.priceScale('volume').applyOptions({\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0\n      },\n      mode: PriceScaleMode.Percentage\n    });\n\n    // Handle resize\n    const handleResize = () => {\n      if (chartContainerRef.current) {\n        chart.applyOptions({\n          width: chartContainerRef.current.clientWidth\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      // Clean up indicator series\n      Object.values(indicatorSeriesRefs.current).forEach(series => {\n        if (series && chart) {\n          try {\n            chart.removeSeries(series);\n          } catch (e) {\n            // Series may already be removed\n          }\n        }\n      });\n      indicatorSeriesRefs.current = {};\n      if (chart) {\n        chart.remove();\n      }\n    };\n  }, [height, chartType]);\n\n  // Reset candle state when symbol or timeframe changes\n  useEffect(() => {\n    setCurrentCandle(null);\n    setLastCandleTime(null);\n    setCurrentPrice(null);\n    setPriceChange(0);\n  }, [symbol, timeframe]);\n\n  // WebSocket connection for real-time data\n  useEffect(() => {\n    if (!isPlaying || !candlestickSeriesRef.current) return;\n    let ws;\n    let reconnectTimeout;\n    const connectWebSocket = () => {\n      try {\n        // Try to connect to WebSocket for real-time data\n        const wsBaseUrl = process.env.REACT_APP_WS_BASE_URL || 'ws://localhost:8000';\n        const wsUrl = `${wsBaseUrl}/api/ws/market/${encodeURIComponent(symbol)}`;\n        console.log(`🔄 Attempting WebSocket connection to: ${wsUrl}`);\n        ws = new WebSocket(wsUrl);\n        ws.onopen = () => {\n          console.log(`🔗 WebSocket connected for ${symbol} real-time data`);\n        };\n        ws.onmessage = event => {\n          const data = JSON.parse(event.data);\n          console.log(`📥 WebSocket received: ${data.type} for ${data.symbol || 'unknown'} (current: ${symbol})`);\n\n          // CRITICAL: Only process data for current symbol\n          if (data.symbol && data.symbol !== symbol) {\n            console.log(`❌ Ignoring WebSocket data for ${data.symbol}, current symbol is ${symbol}`);\n            return;\n          }\n          if (data.type === 'price_update') {\n            console.log(`💰 Price update: ${data.symbol} = $${data.close}`);\n            updateRealTimePrice(data);\n          } else if (data.type === 'historical_data') {\n            // Handle historical data from WebSocket\n            if (data.data && data.data.data) {\n              const ohlcData = data.data.data.map(item => ({\n                time: Math.floor(new Date(item.date).getTime() / 1000),\n                open: parseFloat(item.open),\n                high: parseFloat(item.high),\n                low: parseFloat(item.low),\n                close: parseFloat(item.close),\n                volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n              })).sort((a, b) => a.time - b.time);\n              if (ohlcData.length > 0) {\n                setChartData(ohlcData);\n                updateChartSeries(ohlcData);\n                updateIndicators(ohlcData);\n                setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n                // Set initial lastUpdateTime to the last historical data point\n                setLastUpdateTime(ohlcData[ohlcData.length - 1].time);\n              }\n            }\n          } else if (data.type === 'trading_signal') {\n            // Handle AI trading signals\n            console.log(`🤖 Trading signal received:`, data.signal);\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'signal') {\n            // Handle legacy signals\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'limit_order') {\n            updateLimitOrders(data.orders);\n          } else if (data.type === 'error') {\n            console.error('WebSocket error:', data.message);\n          }\n        };\n        ws.onerror = error => {\n          console.error('WebSocket error:', error);\n        };\n        ws.onclose = () => {\n          console.log(`🔌 WebSocket disconnected for ${symbol}, attempting to reconnect...`);\n          reconnectTimeout = setTimeout(connectWebSocket, 3000);\n        };\n      } catch (error) {\n        console.error('Failed to connect WebSocket:', error);\n        // Start polling fallback for live updates if WebSocket fails\n        startPollingFallback();\n      }\n    };\n\n    // Fallback polling method for live updates when WebSocket unavailable\n    const startPollingFallback = () => {\n      console.log(`🔄 Starting polling fallback for ${symbol} live updates`);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`${apiBaseUrl}/api/market/price?symbol=${symbol}`);\n          if (response.ok) {\n            const priceData = await response.json();\n            // Convert to WebSocket format\n            const wsData = {\n              type: 'price_update',\n              symbol: priceData.symbol,\n              open: priceData.current_price,\n              high: priceData.session_high,\n              low: priceData.session_low,\n              close: priceData.current_price,\n              volume: priceData.volume,\n              change: 0,\n              timestamp: priceData.timestamp,\n              candle_time: Math.floor(Date.now() / 1000),\n              real_data: true,\n              source: 'api_polling'\n            };\n            updateRealTimePrice(wsData);\n          }\n        } catch (error) {\n          console.error('Polling fallback error:', error);\n        }\n      }, 60000); // Poll every 60 seconds to avoid rate limiting\n\n      return () => clearInterval(pollInterval);\n    };\n    const fetchHistoricalData = async () => {\n      try {\n        const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n        const interval = (timeframeConfig === null || timeframeConfig === void 0 ? void 0 : timeframeConfig.value) || '1d';\n\n        // Use selected period or determine optimal period based on interval\n        let period = selectedPeriod || '1y';\n        let maxPoints = 2000;\n\n        // Adjust max points based on period\n        if (period === 'max' || period === '10y' || period === '5y') {\n          maxPoints = 5000;\n        } else if (period === '2y' || period === '1y') {\n          maxPoints = 3000;\n        } else if (period === '6mo' || period === '3mo') {\n          maxPoints = 2000;\n        } else {\n          maxPoints = 1000;\n        }\n\n        // For minute intervals, limit the period to prevent too much data\n        if ((interval === '1m' || interval === '5m') && ['max', '10y', '5y', '2y', '1y'].includes(period)) {\n          period = '5d';\n          maxPoints = 1000;\n        } else if ((interval === '15m' || interval === '30m') && ['max', '10y', '5y', '2y'].includes(period)) {\n          period = '1mo';\n          maxPoints = 1500;\n        }\n        console.log(`Loading ${period} of data with ${interval} interval for ${symbol}`);\n\n        // Fetch comprehensive historical data\n        const historicalResponse = await fetch(`${apiBaseUrl}/api/market/historical?symbol=${symbol}&period=${period}&interval=${interval}&max_points=${maxPoints}`);\n        if (historicalResponse.ok) {\n          const historicalData = await historicalResponse.json();\n          if (historicalData !== null && historicalData !== void 0 && historicalData.data && Array.isArray(historicalData.data)) {\n            const ohlcData = historicalData.data.map(item => ({\n              time: Math.floor(new Date(item.date).getTime() / 1000),\n              open: parseFloat(item.open),\n              high: parseFloat(item.high),\n              low: parseFloat(item.low),\n              close: parseFloat(item.close),\n              volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n            })).sort((a, b) => a.time - b.time);\n            if (ohlcData.length > 0) {\n              setChartData(ohlcData);\n              updateChartSeries(ohlcData);\n              updateIndicators(ohlcData);\n              setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n              // Set initial lastUpdateTime to the last historical data point\n              setLastUpdateTime(ohlcData[ohlcData.length - 1].time);\n\n              // Notify parent component about chart data update\n              if (onChartDataUpdate) {\n                onChartDataUpdate(ohlcData);\n              }\n              return;\n            }\n          }\n        }\n\n        // If historical data fails, show error instead of mock data\n        console.error(`No historical data available for ${symbol} with period ${period} and interval ${interval}`);\n      } catch (error) {\n        console.error('Failed to fetch market data:', error);\n        // Don't generate mock data - show error state instead\n      }\n    };\n\n    // Try WebSocket first, fallback to HTTP\n    connectWebSocket();\n\n    // Also fetch initial historical data\n    fetchHistoricalData();\n\n    // Start polling fallback immediately to ensure live updates work\n    const cleanupPolling = startPollingFallback();\n\n    // Set up periodic refresh of historical data based on selected timeframe\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    const refreshInterval = (timeframeConfig === null || timeframeConfig === void 0 ? void 0 : timeframeConfig.seconds) * 1000 || 60000; // Convert to milliseconds\n\n    const refreshTimer = setInterval(() => {\n      if (isPlaying) {\n        fetchHistoricalData();\n      }\n    }, Math.max(refreshInterval, 30000)); // Minimum 30 seconds refresh\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n      if (refreshTimer) {\n        clearInterval(refreshTimer);\n      }\n      if (cleanupPolling) {\n        cleanupPolling();\n      }\n    };\n  }, [isPlaying, timeframe, selectedPeriod, symbol, apiBaseUrl]);\n\n  // COMPREHENSIVE symbol reset to prevent cross-contamination\n  useEffect(() => {\n    console.log(`🔄 COMPREHENSIVE SYMBOL RESET: Switching to ${symbol}`);\n\n    // Reset ALL state completely\n    setLastUpdateTime(0);\n    setCurrentCandle(null);\n    setLastCandleTime(null);\n    setCurrentPrice(null);\n    setPriceChange(0);\n    setChartData([]);\n    setTradeSignals([]);\n    setLimitOrders([]);\n    setCandleBuffer([]);\n    setPriceHistory([]);\n\n    // Force clear all chart series data\n    if (candlestickSeriesRef.current) {\n      try {\n        candlestickSeriesRef.current.setData([]);\n        console.log(`✅ Cleared candlestick data for ${symbol}`);\n      } catch (e) {\n        console.warn('Failed to clear candlestick data:', e);\n      }\n    }\n    if (volumeSeriesRef.current) {\n      try {\n        volumeSeriesRef.current.setData([]);\n        console.log(`✅ Cleared volume data for ${symbol}`);\n      } catch (e) {\n        console.warn('Failed to clear volume data:', e);\n      }\n    }\n\n    // Clear all indicator series completely\n    Object.values(indicatorSeriesRefs.current).forEach(series => {\n      try {\n        if (series && typeof series.setData === 'function') {\n          series.setData([]);\n        } else if (series && typeof series === 'object') {\n          // Handle complex indicators like Bollinger Bands\n          Object.values(series).forEach(subSeries => {\n            if (subSeries && typeof subSeries.setData === 'function') {\n              subSeries.setData([]);\n            }\n          });\n        }\n      } catch (e) {\n        console.warn('Failed to clear indicator data:', e);\n      }\n    });\n\n    // Reset chart zoom/scale and force a complete refresh\n    if (chartRef.current) {\n      setTimeout(() => {\n        try {\n          chartRef.current.timeScale().fitContent();\n          chartRef.current.timeScale().scrollToRealTime();\n          console.log(`✅ Reset chart scale for ${symbol}`);\n        } catch (e) {\n          console.warn('Failed to reset chart scale:', e);\n        }\n      }, 200);\n    }\n    console.log(`✅ SYMBOL RESET COMPLETE for ${symbol}`);\n  }, [symbol]);\n\n  // Store the latest chart data for indicator updates\n  const [chartData, setChartData] = useState([]);\n\n  // Update chart series with new data\n  const updateChartSeries = useCallback(ohlcData => {\n    if (!candlestickSeriesRef.current || !volumeSeriesRef.current) return;\n\n    // Update main series based on chart type\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.setData(ohlcData);\n    } else if (chartType === 'line') {\n      const lineData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close\n      }));\n      candlestickSeriesRef.current.setData(lineData);\n    } else if (chartType === 'area') {\n      const areaData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close\n      }));\n      candlestickSeriesRef.current.setData(areaData);\n    }\n\n    // Update volume\n    if (indicators.volume.enabled) {\n      const volumeData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.volume,\n        color: chartType === 'candlestick' ? item.close >= item.open ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)' : 'rgba(107, 114, 128, 0.8)'\n      }));\n      volumeSeriesRef.current.setData(volumeData);\n    }\n\n    // Update all enabled indicators\n    updateIndicators(ohlcData);\n\n    // Reset chart scale to fit new data properly\n    if (chartRef.current && ohlcData.length > 0) {\n      setTimeout(() => {\n        try {\n          chartRef.current.timeScale().fitContent();\n        } catch (e) {\n          console.warn('Failed to fit chart content:', e);\n        }\n      }, 50);\n    }\n  }, [chartType, indicators, symbol]);\n\n  // Sophisticated candle building state\n  const [currentCandle, setCurrentCandle] = useState(null);\n  const [lastCandleTime, setLastCandleTime] = useState(null);\n  const [candleBuffer, setCandleBuffer] = useState([]); // Buffer for accumulating ticks\n  const [priceHistory, setPriceHistory] = useState([]); // Track recent prices for realistic OHLC\n\n  // Get timeframe interval in seconds\n  const getTimeframeSeconds = useCallback(() => {\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    return (timeframeConfig === null || timeframeConfig === void 0 ? void 0 : timeframeConfig.seconds) || 86400; // Default to 1 day\n  }, [timeframe, timeframes]);\n\n  // Sophisticated candle start time calculation with proper boundaries\n  const getCandleStartTime = useCallback(timestamp => {\n    const intervalSeconds = getTimeframeSeconds();\n\n    // For minute intervals, align to minute boundaries\n    if (intervalSeconds < 3600) {\n      // Less than 1 hour\n      const minutes = intervalSeconds / 60;\n      const date = new Date(timestamp * 1000);\n      const alignedMinutes = Math.floor(date.getMinutes() / minutes) * minutes;\n      date.setMinutes(alignedMinutes, 0, 0); // Set seconds and milliseconds to 0\n      return Math.floor(date.getTime() / 1000);\n    }\n\n    // For hour intervals, align to hour boundaries  \n    if (intervalSeconds < 86400) {\n      // Less than 1 day\n      const hours = intervalSeconds / 3600;\n      const date = new Date(timestamp * 1000);\n      const alignedHours = Math.floor(date.getHours() / hours) * hours;\n      date.setHours(alignedHours, 0, 0, 0);\n      return Math.floor(date.getTime() / 1000);\n    }\n\n    // For daily intervals, align to day boundaries\n    const date = new Date(timestamp * 1000);\n    date.setHours(0, 0, 0, 0);\n    return Math.floor(date.getTime() / 1000);\n  }, [getTimeframeSeconds]);\n\n  // Check if we should start a new candle (sophisticated boundary detection)\n  const shouldStartNewCandle = useCallback((currentTime, lastCandleStart) => {\n    if (!lastCandleStart) return true;\n    const intervalSeconds = getTimeframeSeconds();\n    const timeSinceLastCandle = currentTime - lastCandleStart;\n\n    // Only start new candle if we've exceeded the timeframe interval\n    return timeSinceLastCandle >= intervalSeconds;\n  }, [getTimeframeSeconds]);\n\n  // Sophisticated real-time price update with proper candle building\n  const updateRealTimePrice = useCallback(priceData => {\n    if (!candlestickSeriesRef.current) return;\n\n    // CRITICAL: Multi-level symbol validation to prevent cross-contamination\n    if (priceData.symbol !== symbol) {\n      console.log(`❌ REJECTING price update for ${priceData.symbol}, current symbol is ${symbol}`);\n      return;\n    }\n\n    // Additional check for formatted symbol to ensure complete isolation\n    if (priceData.formatted_symbol && priceData.symbol !== symbol) {\n      console.log(`❌ REJECTING formatted symbol mismatch: ${priceData.formatted_symbol} vs ${symbol}`);\n      return;\n    }\n\n    // Validate price data is reasonable and not corrupted\n    const price = parseFloat(priceData.close);\n    if (!priceData.close || isNaN(price) || price <= 0 || price > 1000000) {\n      console.warn(`❌ Invalid price data for ${symbol}: $${price}`, priceData);\n      return;\n    }\n\n    // Check for reasonable price changes (prevent massive jumps that indicate data corruption)\n    if (currentPrice && Math.abs(price - currentPrice) / currentPrice > 0.5) {\n      console.warn(`❌ Suspicious price jump for ${symbol}: ${currentPrice} -> ${price} (${((price - currentPrice) / currentPrice * 100).toFixed(1)}%)`);\n      return;\n    }\n    console.log(`✅ Processing price update for ${symbol}: $${price.toFixed(2)} (source: ${priceData.source || 'unknown'})`);\n\n    // Update the current price display with validated data\n    setCurrentPrice(price);\n    setPriceChange(priceData.change || 0);\n\n    // Use the timestamp from the WebSocket message if available, otherwise use current time\n    const messageTime = priceData.candle_time || priceData.current_time || Math.floor(Date.now() / 1000);\n    const currentTime = Math.floor(messageTime);\n\n    // Add to price history for better OHLC calculation\n    setPriceHistory(prev => {\n      const newHistory = [...prev, {\n        price,\n        timestamp: currentTime\n      }].slice(-50); // Keep last 50 price points\n      return newHistory;\n    });\n\n    // Calculate proper candle start time based on timeframe\n    const candleStartTime = getCandleStartTime(currentTime);\n\n    // Safety check: ensure candleStartTime is a valid number\n    if (!Number.isFinite(candleStartTime)) {\n      console.error(`❌ Invalid candleStartTime: ${candleStartTime}, skipping update`);\n      return;\n    }\n\n    // Prevent updating with older data than we've already processed\n    if (candleStartTime < lastUpdateTime) {\n      console.log(`⏰ Skipping older update: ${candleStartTime} < ${lastUpdateTime}`);\n      return;\n    }\n\n    // Determine if we need a new candle\n    const needNewCandle = shouldStartNewCandle(candleStartTime, lastCandleTime);\n    if (needNewCandle) {\n      console.log(`🆕 Starting NEW candle at ${new Date(candleStartTime * 1000).toISOString()}`);\n\n      // Complete the previous candle if it exists\n      if (currentCandle) {\n        console.log(`✅ COMPLETED candle: OHLC(${currentCandle.open}/${currentCandle.high}/${currentCandle.low}/${currentCandle.close}) Vol:${currentCandle.volume}`);\n      }\n\n      // Start new candle with current price as all OHLC values\n      const newCandle = {\n        time: Number(candleStartTime),\n        open: price,\n        high: price,\n        low: price,\n        close: price,\n        volume: parseFloat(priceData.volume || 0)\n      };\n      setCurrentCandle(newCandle);\n      setLastCandleTime(candleStartTime);\n      setCandleBuffer([{\n        price,\n        timestamp: currentTime\n      }]);\n      setLastUpdateTime(candleStartTime);\n\n      // Update chart with new candle - ensure we don't update with older data\n      try {\n        if (chartType === 'candlestick') {\n          candlestickSeriesRef.current.update(newCandle);\n        } else if (chartType === 'line' || chartType === 'area') {\n          candlestickSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: price\n          });\n        }\n      } catch (error) {\n        console.error(`❌ Failed to update chart with new candle:`, error);\n        console.error(`Candle data:`, newCandle);\n      }\n\n      // Update volume\n      if (indicators.volume.enabled && volumeSeriesRef.current) {\n        try {\n          volumeSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: newCandle.volume,\n            color: 'rgba(107, 114, 128, 0.8)' // Neutral color for new candle\n          });\n        } catch (error) {\n          console.error(`❌ Failed to update volume with new candle:`, error);\n        }\n      }\n    } else if (currentCandle) {\n      console.log(`🔄 UPDATING existing candle with price: $${price}`);\n\n      // Update existing candle with new price data\n      const updatedCandle = {\n        ...currentCandle,\n        time: Number(currentCandle.time),\n        high: Math.max(currentCandle.high, price),\n        low: Math.min(currentCandle.low, price),\n        close: price,\n        volume: Math.max(currentCandle.volume, parseFloat(priceData.volume || 0)) // Use max to avoid volume resets\n      };\n\n      // Add to candle buffer for sophisticated OHLC tracking\n      setCandleBuffer(prev => {\n        const newBuffer = [...prev, {\n          price,\n          timestamp: currentTime\n        }];\n\n        // Calculate more sophisticated OHLC from buffer\n        const bufferPrices = newBuffer.map(item => item.price);\n        const realtimeHigh = Math.max(...bufferPrices, updatedCandle.open);\n        const realtimeLow = Math.min(...bufferPrices, updatedCandle.open);\n\n        // Update candle with buffer-calculated values\n        updatedCandle.high = realtimeHigh;\n        updatedCandle.low = realtimeLow;\n        return newBuffer.slice(-20); // Keep last 20 ticks for this candle\n      });\n      setCurrentCandle(updatedCandle);\n      setLastUpdateTime(candleStartTime);\n      console.log(`📊 Updated OHLC: ${updatedCandle.open}/${updatedCandle.high}/${updatedCandle.low}/${updatedCandle.close}`);\n\n      // Update chart with updated candle - ensure we don't update with older data  \n      try {\n        if (chartType === 'candlestick') {\n          candlestickSeriesRef.current.update(updatedCandle);\n        } else if (chartType === 'line' || chartType === 'area') {\n          candlestickSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: updatedCandle.close\n          });\n        }\n      } catch (error) {\n        console.error(`❌ Failed to update chart with updated candle:`, error);\n        console.error(`Updated candle data:`, updatedCandle);\n      }\n\n      // Update volume\n      if (indicators.volume.enabled && volumeSeriesRef.current) {\n        try {\n          const isGreen = updatedCandle.close >= updatedCandle.open;\n          volumeSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: updatedCandle.volume,\n            color: chartType === 'candlestick' ? isGreen ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)' : 'rgba(107, 114, 128, 0.8)'\n          });\n        } catch (error) {\n          console.error(`❌ Failed to update volume with updated candle:`, error);\n        }\n      }\n    }\n  }, [symbol, chartType, indicators.volume.enabled, currentCandle, lastCandleTime, lastUpdateTime, getCandleStartTime, shouldStartNewCandle]);\n\n  // Update limit orders display\n  const updateLimitOrders = useCallback(orders => {\n    setLimitOrders(orders);\n    if (!candlestickSeriesRef.current) return;\n\n    // Add price lines for limit orders\n    orders.forEach(order => {\n      // This would need to be implemented with price line API\n      console.log('Limit order:', order);\n    });\n  }, []);\n\n  // Update indicators based on settings\n  const updateIndicators = useCallback(ohlcData => {\n    if (!chartRef.current || !ohlcData.length) return;\n\n    // Clear existing indicator series\n    Object.keys(indicatorSeriesRefs.current).forEach(key => {\n      const series = indicatorSeriesRefs.current[key];\n      if (series) {\n        try {\n          chartRef.current.removeSeries(series);\n        } catch (e) {\n          // Series may already be removed\n        }\n      }\n    });\n    indicatorSeriesRefs.current = {};\n\n    // Add enabled indicators\n    Object.entries(indicators).forEach(([key, config]) => {\n      if (!config.enabled || !config.visible) return;\n      try {\n        if (key === 'sma20' || key === 'sma50') {\n          const period = key === 'sma20' ? 20 : 50;\n          const smaData = calculateSMA(ohlcData, period);\n          if (smaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `SMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false\n            });\n            series.setData(smaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'ema12' || key === 'ema26') {\n          const period = config.period;\n          const emaData = calculateEMA(ohlcData, period);\n          if (emaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `EMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false\n            });\n            series.setData(emaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'bollinger') {\n          const bollingerData = calculateBollingerBands(ohlcData, config.period, config.stdDev);\n          if (bollingerData.upper.length > 0) {\n            // Upper band\n            const upperSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Upper',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            upperSeries.setData(bollingerData.upper);\n\n            // Lower band\n            const lowerSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Lower',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            lowerSeries.setData(bollingerData.lower);\n\n            // Middle line (SMA)\n            const middleSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Middle',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            middleSeries.setData(bollingerData.middle);\n            indicatorSeriesRefs.current[key] = {\n              upper: upperSeries,\n              lower: lowerSeries,\n              middle: middleSeries\n            };\n          }\n        }\n        // Add more indicators as needed (RSI, MACD would need separate price scales)\n      } catch (error) {\n        console.error(`Error adding indicator ${key}:`, error);\n      }\n    });\n  }, [indicators]);\n\n  // Update indicators when indicator settings change\n  useEffect(() => {\n    if (chartRef.current && chartData.length > 0) {\n      updateIndicators(chartData);\n    }\n  }, [indicators, updateIndicators, chartData]);\n\n  // Technical Analysis Functions\n  const calculateSMA = (data, period) => {\n    const result = [];\n    for (let i = period - 1; i < data.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        sum += data[i - j].close;\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat((sum / period).toFixed(2))\n      });\n    }\n    return result;\n  };\n  const calculateEMA = (data, period) => {\n    var _data$;\n    const result = [];\n    const multiplier = 2 / (period + 1);\n    let ema = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.close) || 0;\n    for (let i = 0; i < data.length; i++) {\n      if (i === 0) {\n        ema = data[i].close;\n      } else {\n        ema = data[i].close * multiplier + ema * (1 - multiplier);\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat(ema.toFixed(2))\n      });\n    }\n    return result;\n  };\n  const calculateBollingerBands = (data, period, stdDev) => {\n    const smaData = calculateSMA(data, period);\n    const upper = [];\n    const lower = [];\n    const middle = [];\n    for (let i = period - 1; i < data.length; i++) {\n      var _smaData;\n      const smaValue = ((_smaData = smaData[i - period + 1]) === null || _smaData === void 0 ? void 0 : _smaData.value) || 0;\n\n      // Calculate standard deviation\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        const diff = data[i - j].close - smaValue;\n        sum += diff * diff;\n      }\n      const variance = sum / period;\n      const standardDeviation = Math.sqrt(variance);\n      const upperValue = smaValue + standardDeviation * stdDev;\n      const lowerValue = smaValue - standardDeviation * stdDev;\n      upper.push({\n        time: data[i].time,\n        value: parseFloat(upperValue.toFixed(2))\n      });\n      lower.push({\n        time: data[i].time,\n        value: parseFloat(lowerValue.toFixed(2))\n      });\n      middle.push({\n        time: data[i].time,\n        value: parseFloat(smaValue.toFixed(2))\n      });\n    }\n    return {\n      upper,\n      lower,\n      middle\n    };\n  };\n\n  // Add trade signal marker\n  const addTradeSignal = useCallback(signal => {\n    if (!candlestickSeriesRef.current) return;\n    const marker = {\n      time: signal.time || Math.floor(Date.now() / 1000),\n      position: signal.type === 'buy' ? 'belowBar' : 'aboveBar',\n      color: signal.type === 'buy' ? '#26a69a' : '#ef5350',\n      shape: signal.type === 'buy' ? 'arrowUp' : 'arrowDown',\n      text: `${signal.type.toUpperCase()}${signal.price ? `: $${signal.price}` : ''}${signal.confidence ? ` (${Math.round(signal.confidence * 100)}%)` : ''}`,\n      size: signal.strength || 1\n    };\n    setTradeSignals(prev => {\n      const newSignals = [...prev, marker];\n      candlestickSeriesRef.current.setMarkers(newSignals);\n      return newSignals;\n    });\n  }, []);\n\n  // Toggle indicator\n  const toggleIndicator = useCallback(indicator => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        enabled: !prev[indicator].enabled\n      }\n    }));\n  }, []);\n\n  // Toggle indicator visibility\n  const toggleIndicatorVisibility = useCallback(indicator => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        visible: !prev[indicator].visible\n      }\n    }));\n  }, []);\n\n  // Change timeframe\n  const changeTimeframe = useCallback(newTimeframe => {\n    setTimeframe(newTimeframe);\n  }, []);\n\n  // Change chart type\n  const changeChartType = useCallback(newType => {\n    setChartType(newType);\n  }, []);\n\n  // Filter indicators for search\n  const filteredIndicators = availableIndicators.filter(indicator => indicator.name.toLowerCase().includes(indicatorSearchTerm.toLowerCase()));\n\n  // Add indicator from search\n  const addIndicatorFromSearch = useCallback(indicatorKey => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicatorKey]: {\n        ...prev[indicatorKey],\n        enabled: true,\n        visible: true\n      }\n    }));\n    setShowIndicatorSearch(false);\n    setIndicatorSearchTerm('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 rounded-lg border border-gray-700 flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-3 border-b border-gray-700 bg-gray-800 flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSymbolSearch(true),\n            className: \"flex items-center space-x-2 px-3 py-1 rounded-md hover:bg-gray-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-white\",\n              children: displaySymbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-4 h-4 text-gray-400\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              viewBox: \"0 0 24 24\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M19 9l-7 7-7-7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 11\n        }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-mono font-bold text-white\",\n            children: [\"$\", typeof currentPrice === 'number' ? currentPrice.toFixed(2) : currentPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm font-medium ${priceChange > 0 ? 'text-green-400' : priceChange < 0 ? 'text-red-400' : 'text-gray-400'}`,\n            children: [priceChange > 0 ? '+' : '', priceChange.toFixed(2), \" (\", (priceChange / currentPrice * 100).toFixed(2), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-xs text-gray-400\",\n            children: \"Interval:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: timeframe,\n            onChange: e => changeTimeframe(e.target.value),\n            className: \"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-blue-500\",\n            children: timeframes.map(tf => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tf.value,\n              children: tf.label\n            }, tf.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-xs text-gray-400\",\n            children: \"Period:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedPeriod,\n            onChange: e => setSelectedPeriod(e.target.value),\n            className: \"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-green-500\",\n            children: periodOptions.map(period => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: period.value,\n              children: [period.label, \" - \", period.description]\n            }, period.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-xs text-gray-400\",\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: chartType,\n            onChange: e => changeChartType(e.target.value),\n            className: \"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-purple-500\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"candlestick\",\n              children: \"Candlestick\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"line\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"area\",\n              children: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowIndicatorSearch(!showIndicatorSearch),\n          className: \"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\",\n          title: \"Add Indicator\",\n          children: /*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPlaying(!isPlaying),\n          className: \"p-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\",\n          title: isPlaying ? 'Pause' : 'Resume',\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n            className: \"w-4 h-4 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(PlayIcon, {\n            className: \"w-4 h-4 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\",\n          title: \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 7\n    }, this), showIndicatorSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-16 right-4 z-50 bg-gray-800 border border-gray-600 rounded-lg shadow-xl w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b border-gray-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-lg font-semibold text-white\",\n            children: \"Indicators & Strategies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowIndicatorSearch(false),\n            className: \"text-gray-400 hover:text-white p-1\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(MagnifyingGlassIcon, {\n            className: \"w-4 h-4 text-gray-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search indicators, strategies, or authors...\",\n            value: indicatorSearchTerm,\n            onChange: e => setIndicatorSearchTerm(e.target.value),\n            className: \"flex-1 bg-gray-700 text-white placeholder-gray-400 border border-gray-600 rounded px-3 py-2 text-sm\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2 mt-3\",\n          children: ['All', 'Moving Averages', 'Oscillators', 'Trend', 'Volume', 'Volatility', 'Price Action', 'Support/Resistance'].map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-2 py-1 text-xs rounded-full border border-gray-600 text-gray-300 hover:border-blue-500 hover:text-white transition-colors\",\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-80 overflow-y-auto\",\n        children: filteredIndicators.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: filteredIndicators.map(indicator => {\n            var _indicators$indicator;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => addIndicatorFromSearch(indicator.key),\n              className: \"w-full text-left p-3 rounded-lg hover:bg-gray-700 transition-colors mb-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-medium text-white text-sm\",\n                    children: indicator.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1298,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 mt-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"inline-block bg-gray-700 px-2 py-0.5 rounded mr-2\",\n                      children: indicator.category\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1300,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-blue-400\",\n                      children: indicator.author\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1301,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1299,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs text-gray-500 ml-2\",\n                  children: (_indicators$indicator = indicators[indicator.key]) !== null && _indicators$indicator !== void 0 && _indicators$indicator.enabled ? '✓ Added' : '+ Add'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1304,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1296,\n                columnNumber: 21\n              }, this)\n            }, indicator.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1291,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 text-center text-gray-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: \"No indicators found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs mt-1\",\n            children: \"Try searching for \\\"RSI\\\", \\\"MACD\\\", or \\\"SuperTrend\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-t border-gray-700 bg-gray-750\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-400\",\n          children: \"\\uD83D\\uDCA1 Popular: SuperTrend, Wave Trend, SSL Channels, Smart Money Concepts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1319,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-b border-gray-700 bg-gray-850\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: Object.entries(indicators).map(([key, config]) => config.enabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleIndicator(key),\n            className: `px-3 py-1 text-xs rounded-full border transition-colors ${config.enabled && config.visible ? 'bg-blue-600 border-blue-600 text-white' : 'bg-transparent border-gray-600 text-gray-400 hover:border-blue-500'}`,\n            style: {\n              borderColor: config.visible ? config.color : undefined\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block w-2 h-2 rounded-full mr-1\",\n              style: {\n                backgroundColor: config.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 19\n            }, this), key.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleIndicatorVisibility(key),\n            className: \"p-1 text-gray-400 hover:text-white\",\n            title: config.visible ? 'Hide' : 'Show',\n            children: config.visible ? /*#__PURE__*/_jsxDEV(EyeIcon, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(EyeSlashIcon, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1355,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1331,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartContainerRef,\n        className: \"absolute inset-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1366,\n        columnNumber: 9\n      }, this), limitOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-4 bg-yellow-600 text-white text-xs px-2 py-1 rounded\",\n        style: {\n          top: `${order.yPosition || 50}%`\n        },\n        children: [\"Limit \", order.type, \": $\", order.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-t border-gray-700 bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-xs text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Interval: \", timeframe]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-2 h-2 bg-green-400 rounded-full mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1390,\n              columnNumber: 15\n            }, this), \"Connected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Signals: \", tradeSignals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Orders: \", limitOrders.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Last: \", new Date().toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DynamicSymbolSearch, {\n      isOpen: showSymbolSearch,\n      onClose: () => setShowSymbolSearch(false),\n      onSymbolSelect: (newSymbol, newDisplaySymbol) => {\n        if (onSymbolChange) onSymbolChange(newSymbol, newDisplaySymbol);\n      },\n      currentSymbol: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1140,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"hqY6Zwd2uGaATCzwDTyQ1gWSjY0=\");\n_c = TradingChart;\nexport default TradingChart;\n\n// Helper function to format numbers\nconst formatPrice = price => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(price);\n};\n\n// Export for use in other components\nexport { formatPrice };\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","createChart","ColorType","CrosshairMode","LineStyle","PriceScaleMode","Cog6ToothIcon","ChartBarIcon","PlayIcon","PauseIcon","MagnifyingGlassIcon","PlusIcon","EyeIcon","EyeSlashIcon","AdjustmentsHorizontalIcon","DynamicSymbolSearch","jsxDEV","_jsxDEV","TradingChart","symbol","displaySymbol","height","apiBaseUrl","process","env","REACT_APP_API_BASE_URL","onSignalReceived","onSymbolChange","onChartDataUpdate","_s","chartContainerRef","chartRef","candlestickSeriesRef","volumeSeriesRef","indicatorSeriesRefs","isPlaying","setIsPlaying","showSymbolSearch","setShowSymbolSearch","timeframe","setTimeframe","selectedPeriod","setSelectedPeriod","chartType","setChartType","showDrawingTools","setShowDrawingTools","showIndicatorSearch","setShowIndicatorSearch","indicatorSearchTerm","setIndicatorSearchTerm","indicators","setIndicators","sma20","enabled","visible","color","period","sma50","ema12","ema26","rsi","overbought","oversold","macd","fastPeriod","slowPeriod","signalPeriod","bollinger","stdDev","volume","stochastic","kPeriod","dPeriod","williams","atr","adx","tradeSignals","setTradeSignals","currentPrice","setCurrentPrice","priceChange","setPriceChange","limitOrders","setLimitOrders","lastUpdateTime","setLastUpdateTime","timeframes","value","label","seconds","periodOptions","description","availableIndicators","key","name","category","author","current","chart","layout","background","type","Solid","textColor","fontSize","fontFamily","grid","vertLines","style","Dotted","horzLines","crosshair","mode","Normal","vertLine","width","Dashed","labelBackgroundColor","horzLine","rightPriceScale","borderColor","entireTextOnly","scaleMargins","top","bottom","leftPriceScale","timeScale","timeVisible","secondsVisible","tickMarkFormatter","time","date","Date","toLocaleTimeString","hour","minute","hour12","clientWidth","handleScroll","mouseWheel","pressedMouseMove","horzTouchDrag","vertTouchDrag","handleScale","axisPressedMouseMove","pinch","mainSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","addLineSeries","lineWidth","crosshairMarkerVisible","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBackgroundColor","addAreaSeries","topColor","bottomColor","lineColor","volumeSeries","addHistogramSeries","priceFormat","priceScaleId","priceScale","applyOptions","Percentage","handleResize","window","addEventListener","removeEventListener","Object","values","forEach","series","removeSeries","e","remove","setCurrentCandle","setLastCandleTime","ws","reconnectTimeout","connectWebSocket","wsBaseUrl","REACT_APP_WS_BASE_URL","wsUrl","encodeURIComponent","console","log","WebSocket","onopen","onmessage","event","data","JSON","parse","close","updateRealTimePrice","ohlcData","map","item","Math","floor","getTime","open","parseFloat","high","low","random","sort","a","b","length","setChartData","updateChartSeries","updateIndicators","signal","addTradeSignal","updateLimitOrders","orders","error","message","onerror","onclose","setTimeout","startPollingFallback","pollInterval","setInterval","response","fetch","ok","priceData","json","wsData","current_price","session_high","session_low","change","timestamp","candle_time","now","real_data","source","clearInterval","fetchHistoricalData","timeframeConfig","find","tf","interval","maxPoints","includes","historicalResponse","historicalData","Array","isArray","cleanupPolling","refreshInterval","refreshTimer","max","clearTimeout","setCandleBuffer","setPriceHistory","setData","warn","subSeries","fitContent","scrollToRealTime","chartData","lineData","areaData","volumeData","currentCandle","lastCandleTime","candleBuffer","priceHistory","getTimeframeSeconds","getCandleStartTime","intervalSeconds","minutes","alignedMinutes","getMinutes","setMinutes","hours","alignedHours","getHours","setHours","shouldStartNewCandle","currentTime","lastCandleStart","timeSinceLastCandle","formatted_symbol","price","isNaN","abs","toFixed","messageTime","current_time","prev","newHistory","slice","candleStartTime","Number","isFinite","needNewCandle","toISOString","newCandle","update","updatedCandle","min","newBuffer","bufferPrices","realtimeHigh","realtimeLow","isGreen","order","keys","entries","config","smaData","calculateSMA","title","lastValueVisible","priceLineVisible","emaData","calculateEMA","bollingerData","calculateBollingerBands","upper","upperSeries","lowerSeries","lower","middleSeries","middle","result","i","sum","j","push","_data$","multiplier","ema","_smaData","smaValue","diff","variance","standardDeviation","sqrt","upperValue","lowerValue","marker","position","shape","text","toUpperCase","confidence","round","size","strength","newSignals","setMarkers","toggleIndicator","indicator","toggleIndicatorVisibility","changeTimeframe","newTimeframe","changeChartType","newType","filteredIndicators","filter","toLowerCase","addIndicatorFromSearch","indicatorKey","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","target","placeholder","autoFocus","cat","_indicators$indicator","undefined","backgroundColor","ref","index","yPosition","isOpen","onClose","onSymbolSelect","newSymbol","newDisplaySymbol","currentSymbol","_c","formatPrice","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","$RefreshReg$"],"sources":["/Users/wilderbaldwin/Dev/tragen/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { createChart, ColorType, CrosshairMode, LineStyle, PriceScaleMode } from 'lightweight-charts';\nimport {\n  Cog6ToothIcon,\n  ChartBarIcon,\n  PlayIcon,\n  PauseIcon,\n  MagnifyingGlassIcon,\n  PlusIcon,\n  EyeIcon,\n  EyeSlashIcon,\n  AdjustmentsHorizontalIcon,\n} from '@heroicons/react/24/outline';\nimport DynamicSymbolSearch from './DynamicSymbolSearch';\n\nconst TradingChart = ({ symbol = 'NQ=F', displaySymbol = 'NQ', height = 600, apiBaseUrl = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000', onSignalReceived, onSymbolChange, onChartDataUpdate }) => {\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const volumeSeriesRef = useRef(null);\n  const indicatorSeriesRefs = useRef({});\n  \n  const [isPlaying, setIsPlaying] = useState(true);\n  const [showSymbolSearch, setShowSymbolSearch] = useState(false);\n  const [timeframe, setTimeframe] = useState('1d');\n  const [selectedPeriod, setSelectedPeriod] = useState('1mo');\n  const [chartType, setChartType] = useState('candlestick');\n  const [showDrawingTools, setShowDrawingTools] = useState(false);\n  const [showIndicatorSearch, setShowIndicatorSearch] = useState(false);\n  const [indicatorSearchTerm, setIndicatorSearchTerm] = useState('');\n  \n  const [indicators, setIndicators] = useState({\n    sma20: { enabled: true, visible: true, color: '#f59e0b', period: 20 },\n    sma50: { enabled: true, visible: true, color: '#8b5cf6', period: 50 },\n    ema12: { enabled: false, visible: true, color: '#06b6d4', period: 12 },\n    ema26: { enabled: false, visible: true, color: '#f97316', period: 26 },\n    rsi: { enabled: false, visible: true, color: '#a855f7', period: 14, overbought: 70, oversold: 30 },\n    macd: { enabled: false, visible: true, color: '#10b981', fastPeriod: 12, slowPeriod: 26, signalPeriod: 9 },\n    bollinger: { enabled: false, visible: true, color: '#ef4444', period: 20, stdDev: 2 },\n    volume: { enabled: true, visible: true, color: '#6b7280' },\n    stochastic: { enabled: false, visible: true, color: '#ec4899', kPeriod: 14, dPeriod: 3 },\n    williams: { enabled: false, visible: true, color: '#84cc16', period: 14 },\n    atr: { enabled: false, visible: true, color: '#f59e0b', period: 14 },\n    adx: { enabled: false, visible: true, color: '#6366f1', period: 14 },\n  });\n  \n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [priceChange, setPriceChange] = useState(0);\n  const [limitOrders, setLimitOrders] = useState([]);\n  const [lastUpdateTime, setLastUpdateTime] = useState(0);\n  \n\n  // Candlestick timeframes (intervals)\n  const timeframes = [\n    { value: '1m', label: '1 min', seconds: 60 },\n    { value: '3m', label: '3 min', seconds: 180 },\n    { value: '5m', label: '5 min', seconds: 300 },\n    { value: '15m', label: '15 min', seconds: 900 },\n    { value: '30m', label: '30 min', seconds: 1800 },\n    { value: '1h', label: '1 hour', seconds: 3600 },\n    { value: '2h', label: '2 hour', seconds: 7200 },\n    { value: '4h', label: '4 hour', seconds: 14400 },\n    { value: '6h', label: '6 hour', seconds: 21600 },\n    { value: '12h', label: '12 hour', seconds: 43200 },\n    { value: '1d', label: 'Day', seconds: 86400 },\n    { value: '1wk', label: 'Week', seconds: 604800 },\n    { value: '1mo', label: 'Month', seconds: 2629746 },\n  ];\n\n  // Period selection options for manual data loading\n  const periodOptions = [\n    { value: '1d', label: '1D', description: 'Last day' },\n    { value: '5d', label: '5D', description: 'Last 5 days' },\n    { value: '1mo', label: '1M', description: 'Last month' },\n    { value: '3mo', label: '3M', description: 'Last 3 months' },\n    { value: '6mo', label: '6M', description: 'Last 6 months' },\n    { value: '1y', label: '1Y', description: 'Last year' },\n    { value: '2y', label: '2Y', description: 'Last 2 years' },\n    { value: '5y', label: '5Y', description: 'Last 5 years' },\n    { value: 'max', label: 'ALL', description: 'All available data' },\n  ];\n\n  // Comprehensive TradingView-style indicators including popular public ones\n  const availableIndicators = [\n    // Built-in Technical Indicators\n    { key: 'sma20', name: 'Simple Moving Average (20)', category: 'Moving Averages', author: 'Built-in' },\n    { key: 'sma50', name: 'Simple Moving Average (50)', category: 'Moving Averages', author: 'Built-in' },\n    { key: 'ema12', name: 'Exponential Moving Average (12)', category: 'Moving Averages', author: 'Built-in' },\n    { key: 'ema26', name: 'Exponential Moving Average (26)', category: 'Moving Averages', author: 'Built-in' },\n    { key: 'rsi', name: 'Relative Strength Index', category: 'Oscillators', author: 'Built-in' },\n    { key: 'macd', name: 'MACD', category: 'Oscillators', author: 'Built-in' },\n    { key: 'bollinger', name: 'Bollinger Bands', category: 'Volatility', author: 'Built-in' },\n    { key: 'stochastic', name: 'Stochastic Oscillator', category: 'Oscillators', author: 'Built-in' },\n    { key: 'williams', name: 'Williams %R', category: 'Oscillators', author: 'Built-in' },\n    { key: 'atr', name: 'Average True Range', category: 'Volatility', author: 'Built-in' },\n    { key: 'adx', name: 'Average Directional Index', category: 'Trend', author: 'Built-in' },\n    { key: 'volume', name: 'Volume', category: 'Volume', author: 'Built-in' },\n    \n    // Popular Public TradingView Indicators\n    { key: 'supertrend', name: 'SuperTrend', category: 'Trend', author: '@KivancOzbilgic' },\n    { key: 'vwap', name: 'Volume Weighted Average Price', category: 'Volume', author: 'Built-in' },\n    { key: 'ichimoku', name: 'Ichimoku Cloud', category: 'Trend', author: 'Built-in' },\n    { key: 'emas_ribbon', name: 'EMA Ribbon (8 EMAs)', category: 'Moving Averages', author: '@everget' },\n    { key: 'squeeze_momentum', name: 'Squeeze Momentum', category: 'Momentum', author: '@LazyBear' },\n    { key: 'wave_trend', name: 'WaveTrend Oscillator', category: 'Oscillators', author: '@LazyBear' },\n    { key: 'ssl_channels', name: 'SSL Channels', category: 'Trend', author: '@ErwinBeckers' },\n    { key: 'fibonacci_retracement', name: 'Auto Fibonacci Retracement', category: 'Support/Resistance', author: '@LonesomeTheBlue' },\n    { key: 'pivot_points', name: 'Pivot Points Standard', category: 'Support/Resistance', author: 'Built-in' },\n    { key: 'market_structure', name: 'Market Structure Break & Order Block', category: 'Price Action', author: '@LuxAlgo' },\n    { key: 'smart_money_concepts', name: 'Smart Money Concepts', category: 'Price Action', author: '@LuxAlgo' },\n    { key: 'order_blocks', name: 'Order Blocks', category: 'Price Action', author: '@LuxAlgo' },\n    { key: 'fair_value_gaps', name: 'Fair Value Gaps (FVG)', category: 'Price Action', author: '@LuxAlgo' },\n    { key: 'volume_profile', name: 'Volume Profile', category: 'Volume', author: 'Built-in' },\n    { key: 'renko', name: 'Renko Chart', category: 'Chart Types', author: 'Built-in' },\n    { key: 'heikin_ashi', name: 'Heikin Ashi', category: 'Chart Types', author: 'Built-in' },\n    { key: 'divergence_indicator', name: 'RSI Divergence', category: 'Divergence', author: '@ricardosantos' },\n    { key: 'elder_ray', name: 'Elder Ray Index', category: 'Momentum', author: '@everget' },\n    { key: 'money_flow_index', name: 'Money Flow Index (MFI)', category: 'Volume', author: 'Built-in' },\n    { key: 'commodity_channel', name: 'Commodity Channel Index (CCI)', category: 'Momentum', author: 'Built-in' },\n    { key: 'parabolic_sar', name: 'Parabolic SAR', category: 'Trend', author: 'Built-in' },\n    { key: 'keltner_channels', name: 'Keltner Channels', category: 'Volatility', author: 'Built-in' },\n    { key: 'donchian_channels', name: 'Donchian Channels', category: 'Volatility', author: 'Built-in' },\n    { key: 'schaff_trend', name: 'Schaff Trend Cycle', category: 'Trend', author: '@everget' },\n    { key: 'chaikin_oscillator', name: 'Chaikin Oscillator', category: 'Volume', author: 'Built-in' },\n    { key: 'price_volume_trend', name: 'Price Volume Trend (PVT)', category: 'Volume', author: 'Built-in' },\n    { key: 'trix', name: 'TRIX', category: 'Momentum', author: 'Built-in' },\n    { key: 'ultimate_oscillator', name: 'Ultimate Oscillator', category: 'Momentum', author: 'Built-in' },\n    { key: 'chande_momentum', name: 'Chande Momentum Oscillator', category: 'Momentum', author: 'Built-in' },\n    { key: 'mass_index', name: 'Mass Index', category: 'Volatility', author: 'Built-in' },\n    { key: 'vortex', name: 'Vortex Indicator', category: 'Trend', author: 'Built-in' },\n    { key: 'accumulation_distribution', name: 'Accumulation/Distribution Line', category: 'Volume', author: 'Built-in' },\n    { key: 'on_balance_volume', name: 'On Balance Volume (OBV)', category: 'Volume', author: 'Built-in' },\n    { key: 'ease_of_movement', name: 'Ease of Movement', category: 'Volume', author: 'Built-in' },\n    { key: 'negative_volume_index', name: 'Negative Volume Index', category: 'Volume', author: 'Built-in' },\n    { key: 'positive_volume_index', name: 'Positive Volume Index', category: 'Volume', author: 'Built-in' },\n  ];\n\n  // Initialize chart\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: { type: ColorType.Solid, color: '#0a0a0b' },\n        textColor: '#f9fafb',\n        fontSize: 12,\n        fontFamily: 'Trebuchet MS',\n      },\n      grid: {\n        vertLines: { color: 'rgba(55, 65, 81, 0.5)', style: LineStyle.Dotted },\n        horzLines: { color: 'rgba(55, 65, 81, 0.5)', style: LineStyle.Dotted },\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n        vertLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6',\n        },\n        horzLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6',\n        },\n      },\n      rightPriceScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        entireTextOnly: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25,\n        },\n      },\n      leftPriceScale: {\n        visible: false,\n      },\n      timeScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: (time) => {\n          const date = new Date(time * 1000);\n          return date.toLocaleTimeString('en-US', { \n            hour: '2-digit', \n            minute: '2-digit',\n            hour12: false \n          });\n        },\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: height,\n      handleScroll: {\n        mouseWheel: true,\n        pressedMouseMove: true,\n        horzTouchDrag: true,\n        vertTouchDrag: true,\n      },\n      handleScale: {\n        axisPressedMouseMove: true,\n        mouseWheel: true,\n        pinch: true,\n      },\n    });\n\n    chartRef.current = chart;\n\n    // Main price series\n    let mainSeries;\n    if (chartType === 'candlestick') {\n      mainSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350',\n      });\n    } else if (chartType === 'line') {\n      mainSeries = chart.addLineSeries({\n        color: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n        crosshairMarkerRadius: 6,\n        crosshairMarkerBorderColor: '#14b8a6',\n        crosshairMarkerBackgroundColor: '#14b8a6',\n      });\n    } else if (chartType === 'area') {\n      mainSeries = chart.addAreaSeries({\n        topColor: 'rgba(20, 184, 166, 0.4)',\n        bottomColor: 'rgba(20, 184, 166, 0.0)',\n        lineColor: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n      });\n    }\n\n    candlestickSeriesRef.current = mainSeries;\n\n    // Volume series\n    const volumeSeries = chart.addHistogramSeries({\n      color: 'rgba(107, 114, 128, 0.8)',\n      priceFormat: {\n        type: 'volume',\n      },\n      priceScaleId: 'volume',\n    });\n\n    volumeSeriesRef.current = volumeSeries;\n\n    // Set up volume price scale\n    chart.priceScale('volume').applyOptions({\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n      },\n      mode: PriceScaleMode.Percentage,\n    });\n\n    // Handle resize\n    const handleResize = () => {\n      if (chartContainerRef.current) {\n        chart.applyOptions({\n          width: chartContainerRef.current.clientWidth,\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      // Clean up indicator series\n      Object.values(indicatorSeriesRefs.current).forEach(series => {\n        if (series && chart) {\n          try {\n            chart.removeSeries(series);\n          } catch (e) {\n            // Series may already be removed\n          }\n        }\n      });\n      indicatorSeriesRefs.current = {};\n      if (chart) {\n        chart.remove();\n      }\n    };\n  }, [height, chartType]);\n\n  // Reset candle state when symbol or timeframe changes\n  useEffect(() => {\n    setCurrentCandle(null);\n    setLastCandleTime(null);\n    setCurrentPrice(null);\n    setPriceChange(0);\n  }, [symbol, timeframe]);\n\n  // WebSocket connection for real-time data\n  useEffect(() => {\n    if (!isPlaying || !candlestickSeriesRef.current) return;\n\n    let ws;\n    let reconnectTimeout;\n\n    const connectWebSocket = () => {\n      try {\n        // Try to connect to WebSocket for real-time data\n        const wsBaseUrl = process.env.REACT_APP_WS_BASE_URL || 'ws://localhost:8000';\n        const wsUrl = `${wsBaseUrl}/api/ws/market/${encodeURIComponent(symbol)}`;\n        console.log(`🔄 Attempting WebSocket connection to: ${wsUrl}`);\n        ws = new WebSocket(wsUrl);\n        \n        ws.onopen = () => {\n          console.log(`🔗 WebSocket connected for ${symbol} real-time data`);\n        };\n\n        ws.onmessage = (event) => {\n          const data = JSON.parse(event.data);\n          console.log(`📥 WebSocket received: ${data.type} for ${data.symbol || 'unknown'} (current: ${symbol})`);\n          \n          // CRITICAL: Only process data for current symbol\n          if (data.symbol && data.symbol !== symbol) {\n            console.log(`❌ Ignoring WebSocket data for ${data.symbol}, current symbol is ${symbol}`);\n            return;\n          }\n          \n          if (data.type === 'price_update') {\n            console.log(`💰 Price update: ${data.symbol} = $${data.close}`);\n            updateRealTimePrice(data);\n          } else if (data.type === 'historical_data') {\n            // Handle historical data from WebSocket\n            if (data.data && data.data.data) {\n              const ohlcData = data.data.data.map(item => ({\n                time: Math.floor(new Date(item.date).getTime() / 1000),\n                open: parseFloat(item.open),\n                high: parseFloat(item.high),\n                low: parseFloat(item.low),\n                close: parseFloat(item.close),\n                volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n              })).sort((a, b) => a.time - b.time);\n              \n              if (ohlcData.length > 0) {\n                setChartData(ohlcData);\n                updateChartSeries(ohlcData);\n                updateIndicators(ohlcData);\n                setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n                // Set initial lastUpdateTime to the last historical data point\n                setLastUpdateTime(ohlcData[ohlcData.length - 1].time);\n              }\n            }\n          } else if (data.type === 'trading_signal') {\n            // Handle AI trading signals\n            console.log(`🤖 Trading signal received:`, data.signal);\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'signal') {\n            // Handle legacy signals\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'limit_order') {\n            updateLimitOrders(data.orders);\n          } else if (data.type === 'error') {\n            console.error('WebSocket error:', data.message);\n          }\n        };\n\n        ws.onerror = (error) => {\n          console.error('WebSocket error:', error);\n        };\n\n        ws.onclose = () => {\n          console.log(`🔌 WebSocket disconnected for ${symbol}, attempting to reconnect...`);\n          reconnectTimeout = setTimeout(connectWebSocket, 3000);\n        };\n      } catch (error) {\n        console.error('Failed to connect WebSocket:', error);\n        // Start polling fallback for live updates if WebSocket fails\n        startPollingFallback();\n      }\n    };\n\n    // Fallback polling method for live updates when WebSocket unavailable\n    const startPollingFallback = () => {\n      console.log(`🔄 Starting polling fallback for ${symbol} live updates`);\n      const pollInterval = setInterval(async () => {\n        try {\n          const response = await fetch(`${apiBaseUrl}/api/market/price?symbol=${symbol}`);\n          if (response.ok) {\n            const priceData = await response.json();\n            // Convert to WebSocket format\n            const wsData = {\n              type: 'price_update',\n              symbol: priceData.symbol,\n              open: priceData.current_price,\n              high: priceData.session_high,\n              low: priceData.session_low,\n              close: priceData.current_price,\n              volume: priceData.volume,\n              change: 0,\n              timestamp: priceData.timestamp,\n              candle_time: Math.floor(Date.now() / 1000),\n              real_data: true,\n              source: 'api_polling'\n            };\n            updateRealTimePrice(wsData);\n          }\n        } catch (error) {\n          console.error('Polling fallback error:', error);\n        }\n      }, 60000); // Poll every 60 seconds to avoid rate limiting\n\n      return () => clearInterval(pollInterval);\n    };\n\n    const fetchHistoricalData = async () => {\n      try {\n        const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n        const interval = timeframeConfig?.value || '1d';\n        \n        // Use selected period or determine optimal period based on interval\n        let period = selectedPeriod || '1y';\n        let maxPoints = 2000;\n        \n        // Adjust max points based on period\n        if (period === 'max' || period === '10y' || period === '5y') {\n          maxPoints = 5000;\n        } else if (period === '2y' || period === '1y') {\n          maxPoints = 3000;\n        } else if (period === '6mo' || period === '3mo') {\n          maxPoints = 2000;\n        } else {\n          maxPoints = 1000;\n        }\n        \n        // For minute intervals, limit the period to prevent too much data\n        if ((interval === '1m' || interval === '5m') && ['max', '10y', '5y', '2y', '1y'].includes(period)) {\n          period = '5d';\n          maxPoints = 1000;\n        } else if ((interval === '15m' || interval === '30m') && ['max', '10y', '5y', '2y'].includes(period)) {\n          period = '1mo';\n          maxPoints = 1500;\n        }\n        \n        console.log(`Loading ${period} of data with ${interval} interval for ${symbol}`);\n        \n        // Fetch comprehensive historical data\n        const historicalResponse = await fetch(\n          `${apiBaseUrl}/api/market/historical?symbol=${symbol}&period=${period}&interval=${interval}&max_points=${maxPoints}`\n        );\n        \n        if (historicalResponse.ok) {\n          const historicalData = await historicalResponse.json();\n          \n          if (historicalData?.data && Array.isArray(historicalData.data)) {\n            const ohlcData = historicalData.data.map(item => ({\n              time: Math.floor(new Date(item.date).getTime() / 1000),\n              open: parseFloat(item.open),\n              high: parseFloat(item.high),\n              low: parseFloat(item.low),\n              close: parseFloat(item.close),\n              volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n            })).sort((a, b) => a.time - b.time);\n            \n            if (ohlcData.length > 0) {\n              setChartData(ohlcData);\n              updateChartSeries(ohlcData);\n              updateIndicators(ohlcData);\n              setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n              // Set initial lastUpdateTime to the last historical data point\n              setLastUpdateTime(ohlcData[ohlcData.length - 1].time);\n              \n              // Notify parent component about chart data update\n              if (onChartDataUpdate) {\n                onChartDataUpdate(ohlcData);\n              }\n              return;\n            }\n          }\n        }\n        \n        // If historical data fails, show error instead of mock data\n        console.error(`No historical data available for ${symbol} with period ${period} and interval ${interval}`);\n        \n      } catch (error) {\n        console.error('Failed to fetch market data:', error);\n        // Don't generate mock data - show error state instead\n      }\n    };\n\n    // Try WebSocket first, fallback to HTTP\n    connectWebSocket();\n    \n    // Also fetch initial historical data\n    fetchHistoricalData();\n    \n    // Start polling fallback immediately to ensure live updates work\n    const cleanupPolling = startPollingFallback();\n    \n    // Set up periodic refresh of historical data based on selected timeframe\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    const refreshInterval = timeframeConfig?.seconds * 1000 || 60000; // Convert to milliseconds\n    \n    const refreshTimer = setInterval(() => {\n      if (isPlaying) {\n        fetchHistoricalData();\n      }\n    }, Math.max(refreshInterval, 30000)); // Minimum 30 seconds refresh\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n      if (refreshTimer) {\n        clearInterval(refreshTimer);\n      }\n      if (cleanupPolling) {\n        cleanupPolling();\n      }\n    };\n  }, [isPlaying, timeframe, selectedPeriod, symbol, apiBaseUrl]);\n\n  // COMPREHENSIVE symbol reset to prevent cross-contamination\n  useEffect(() => {\n    console.log(`🔄 COMPREHENSIVE SYMBOL RESET: Switching to ${symbol}`);\n    \n    // Reset ALL state completely\n    setLastUpdateTime(0);\n    setCurrentCandle(null);\n    setLastCandleTime(null);\n    setCurrentPrice(null);\n    setPriceChange(0);\n    setChartData([]);\n    setTradeSignals([]);\n    setLimitOrders([]);\n    setCandleBuffer([]);\n    setPriceHistory([]);\n    \n    // Force clear all chart series data\n    if (candlestickSeriesRef.current) {\n      try {\n        candlestickSeriesRef.current.setData([]);\n        console.log(`✅ Cleared candlestick data for ${symbol}`);\n      } catch (e) {\n        console.warn('Failed to clear candlestick data:', e);\n      }\n    }\n    \n    if (volumeSeriesRef.current) {\n      try {\n        volumeSeriesRef.current.setData([]);\n        console.log(`✅ Cleared volume data for ${symbol}`);\n      } catch (e) {\n        console.warn('Failed to clear volume data:', e);\n      }\n    }\n    \n    // Clear all indicator series completely\n    Object.values(indicatorSeriesRefs.current).forEach(series => {\n      try {\n        if (series && typeof series.setData === 'function') {\n          series.setData([]);\n        } else if (series && typeof series === 'object') {\n          // Handle complex indicators like Bollinger Bands\n          Object.values(series).forEach(subSeries => {\n            if (subSeries && typeof subSeries.setData === 'function') {\n              subSeries.setData([]);\n            }\n          });\n        }\n      } catch (e) {\n        console.warn('Failed to clear indicator data:', e);\n      }\n    });\n    \n    // Reset chart zoom/scale and force a complete refresh\n    if (chartRef.current) {\n      setTimeout(() => {\n        try {\n          chartRef.current.timeScale().fitContent();\n          chartRef.current.timeScale().scrollToRealTime();\n          console.log(`✅ Reset chart scale for ${symbol}`);\n        } catch (e) {\n          console.warn('Failed to reset chart scale:', e);\n        }\n      }, 200);\n    }\n    \n    console.log(`✅ SYMBOL RESET COMPLETE for ${symbol}`);\n    \n  }, [symbol]);\n\n  // Store the latest chart data for indicator updates\n  const [chartData, setChartData] = useState([]);\n\n\n  // Update chart series with new data\n  const updateChartSeries = useCallback((ohlcData) => {\n    if (!candlestickSeriesRef.current || !volumeSeriesRef.current) return;\n\n\n    // Update main series based on chart type\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.setData(ohlcData);\n    } else if (chartType === 'line') {\n      const lineData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close,\n      }));\n      candlestickSeriesRef.current.setData(lineData);\n    } else if (chartType === 'area') {\n      const areaData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close,\n      }));\n      candlestickSeriesRef.current.setData(areaData);\n    }\n\n    // Update volume\n    if (indicators.volume.enabled) {\n      const volumeData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.volume,\n        color: (chartType === 'candlestick' ? \n          (item.close >= item.open ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)') :\n          'rgba(107, 114, 128, 0.8)'),\n      }));\n      volumeSeriesRef.current.setData(volumeData);\n    }\n\n    // Update all enabled indicators\n    updateIndicators(ohlcData);\n    \n    // Reset chart scale to fit new data properly\n    if (chartRef.current && ohlcData.length > 0) {\n      setTimeout(() => {\n        try {\n          chartRef.current.timeScale().fitContent();\n        } catch (e) {\n          console.warn('Failed to fit chart content:', e);\n        }\n      }, 50);\n    }\n  }, [chartType, indicators, symbol]);\n\n  // Sophisticated candle building state\n  const [currentCandle, setCurrentCandle] = useState(null);\n  const [lastCandleTime, setLastCandleTime] = useState(null);\n  const [candleBuffer, setCandleBuffer] = useState([]); // Buffer for accumulating ticks\n  const [priceHistory, setPriceHistory] = useState([]); // Track recent prices for realistic OHLC\n\n  // Get timeframe interval in seconds\n  const getTimeframeSeconds = useCallback(() => {\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    return timeframeConfig?.seconds || 86400; // Default to 1 day\n  }, [timeframe, timeframes]);\n\n  // Sophisticated candle start time calculation with proper boundaries\n  const getCandleStartTime = useCallback((timestamp) => {\n    const intervalSeconds = getTimeframeSeconds();\n    \n    // For minute intervals, align to minute boundaries\n    if (intervalSeconds < 3600) { // Less than 1 hour\n      const minutes = intervalSeconds / 60;\n      const date = new Date(timestamp * 1000);\n      const alignedMinutes = Math.floor(date.getMinutes() / minutes) * minutes;\n      date.setMinutes(alignedMinutes, 0, 0); // Set seconds and milliseconds to 0\n      return Math.floor(date.getTime() / 1000);\n    }\n    \n    // For hour intervals, align to hour boundaries  \n    if (intervalSeconds < 86400) { // Less than 1 day\n      const hours = intervalSeconds / 3600;\n      const date = new Date(timestamp * 1000);\n      const alignedHours = Math.floor(date.getHours() / hours) * hours;\n      date.setHours(alignedHours, 0, 0, 0);\n      return Math.floor(date.getTime() / 1000);\n    }\n    \n    // For daily intervals, align to day boundaries\n    const date = new Date(timestamp * 1000);\n    date.setHours(0, 0, 0, 0);\n    return Math.floor(date.getTime() / 1000);\n  }, [getTimeframeSeconds]);\n\n  // Check if we should start a new candle (sophisticated boundary detection)\n  const shouldStartNewCandle = useCallback((currentTime, lastCandleStart) => {\n    if (!lastCandleStart) return true;\n    \n    const intervalSeconds = getTimeframeSeconds();\n    const timeSinceLastCandle = currentTime - lastCandleStart;\n    \n    // Only start new candle if we've exceeded the timeframe interval\n    return timeSinceLastCandle >= intervalSeconds;\n  }, [getTimeframeSeconds]);\n\n  // Sophisticated real-time price update with proper candle building\n  const updateRealTimePrice = useCallback((priceData) => {\n    if (!candlestickSeriesRef.current) return;\n\n    // CRITICAL: Multi-level symbol validation to prevent cross-contamination\n    if (priceData.symbol !== symbol) {\n      console.log(`❌ REJECTING price update for ${priceData.symbol}, current symbol is ${symbol}`);\n      return;\n    }\n    \n    // Additional check for formatted symbol to ensure complete isolation\n    if (priceData.formatted_symbol && priceData.symbol !== symbol) {\n      console.log(`❌ REJECTING formatted symbol mismatch: ${priceData.formatted_symbol} vs ${symbol}`);\n      return;\n    }\n\n    // Validate price data is reasonable and not corrupted\n    const price = parseFloat(priceData.close);\n    if (!priceData.close || isNaN(price) || price <= 0 || price > 1000000) {\n      console.warn(`❌ Invalid price data for ${symbol}: $${price}`, priceData);\n      return;\n    }\n    \n    // Check for reasonable price changes (prevent massive jumps that indicate data corruption)\n    if (currentPrice && Math.abs(price - currentPrice) / currentPrice > 0.5) {\n      console.warn(`❌ Suspicious price jump for ${symbol}: ${currentPrice} -> ${price} (${((price - currentPrice) / currentPrice * 100).toFixed(1)}%)`);\n      return;\n    }\n\n    console.log(`✅ Processing price update for ${symbol}: $${price.toFixed(2)} (source: ${priceData.source || 'unknown'})`);\n\n    // Update the current price display with validated data\n    setCurrentPrice(price);\n    setPriceChange(priceData.change || 0);\n    \n    // Use the timestamp from the WebSocket message if available, otherwise use current time\n    const messageTime = priceData.candle_time || priceData.current_time || Math.floor(Date.now() / 1000);\n    const currentTime = Math.floor(messageTime);\n    \n    // Add to price history for better OHLC calculation\n    setPriceHistory(prev => {\n      const newHistory = [...prev, { price, timestamp: currentTime }].slice(-50); // Keep last 50 price points\n      return newHistory;\n    });\n\n    // Calculate proper candle start time based on timeframe\n    const candleStartTime = getCandleStartTime(currentTime);\n    \n    // Safety check: ensure candleStartTime is a valid number\n    if (!Number.isFinite(candleStartTime)) {\n      console.error(`❌ Invalid candleStartTime: ${candleStartTime}, skipping update`);\n      return;\n    }\n    \n    // Prevent updating with older data than we've already processed\n    if (candleStartTime < lastUpdateTime) {\n      console.log(`⏰ Skipping older update: ${candleStartTime} < ${lastUpdateTime}`);\n      return;\n    }\n    \n    // Determine if we need a new candle\n    const needNewCandle = shouldStartNewCandle(candleStartTime, lastCandleTime);\n    \n    if (needNewCandle) {\n      console.log(`🆕 Starting NEW candle at ${new Date(candleStartTime * 1000).toISOString()}`);\n      \n      // Complete the previous candle if it exists\n      if (currentCandle) {\n        console.log(`✅ COMPLETED candle: OHLC(${currentCandle.open}/${currentCandle.high}/${currentCandle.low}/${currentCandle.close}) Vol:${currentCandle.volume}`);\n      }\n      \n      // Start new candle with current price as all OHLC values\n      const newCandle = {\n        time: Number(candleStartTime),\n        open: price,\n        high: price,\n        low: price,\n        close: price,\n        volume: parseFloat(priceData.volume || 0)\n      };\n      \n      \n      setCurrentCandle(newCandle);\n      setLastCandleTime(candleStartTime);\n      setCandleBuffer([{ price, timestamp: currentTime }]);\n      setLastUpdateTime(candleStartTime);\n      \n      // Update chart with new candle - ensure we don't update with older data\n      try {\n        if (chartType === 'candlestick') {\n          candlestickSeriesRef.current.update(newCandle);\n        } else if (chartType === 'line' || chartType === 'area') {\n          candlestickSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: price\n          });\n        }\n      } catch (error) {\n        console.error(`❌ Failed to update chart with new candle:`, error);\n        console.error(`Candle data:`, newCandle);\n      }\n      \n      // Update volume\n      if (indicators.volume.enabled && volumeSeriesRef.current) {\n        try {\n          volumeSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: newCandle.volume,\n            color: 'rgba(107, 114, 128, 0.8)' // Neutral color for new candle\n          });\n        } catch (error) {\n          console.error(`❌ Failed to update volume with new candle:`, error);\n        }\n      }\n      \n    } else if (currentCandle) {\n      console.log(`🔄 UPDATING existing candle with price: $${price}`);\n      \n      // Update existing candle with new price data\n      const updatedCandle = {\n        ...currentCandle,\n        time: Number(currentCandle.time),\n        high: Math.max(currentCandle.high, price),\n        low: Math.min(currentCandle.low, price),\n        close: price,\n        volume: Math.max(currentCandle.volume, parseFloat(priceData.volume || 0)) // Use max to avoid volume resets\n      };\n      \n      \n      // Add to candle buffer for sophisticated OHLC tracking\n      setCandleBuffer(prev => {\n        const newBuffer = [...prev, { price, timestamp: currentTime }];\n        \n        // Calculate more sophisticated OHLC from buffer\n        const bufferPrices = newBuffer.map(item => item.price);\n        const realtimeHigh = Math.max(...bufferPrices, updatedCandle.open);\n        const realtimeLow = Math.min(...bufferPrices, updatedCandle.open);\n        \n        // Update candle with buffer-calculated values\n        updatedCandle.high = realtimeHigh;\n        updatedCandle.low = realtimeLow;\n        \n        return newBuffer.slice(-20); // Keep last 20 ticks for this candle\n      });\n      \n      setCurrentCandle(updatedCandle);\n      setLastUpdateTime(candleStartTime);\n      \n      console.log(`📊 Updated OHLC: ${updatedCandle.open}/${updatedCandle.high}/${updatedCandle.low}/${updatedCandle.close}`);\n      \n      // Update chart with updated candle - ensure we don't update with older data  \n      try {\n        if (chartType === 'candlestick') {\n          candlestickSeriesRef.current.update(updatedCandle);\n        } else if (chartType === 'line' || chartType === 'area') {\n          candlestickSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: updatedCandle.close\n          });\n        }\n      } catch (error) {\n        console.error(`❌ Failed to update chart with updated candle:`, error);\n        console.error(`Updated candle data:`, updatedCandle);\n      }\n      \n      // Update volume\n      if (indicators.volume.enabled && volumeSeriesRef.current) {\n        try {\n          const isGreen = updatedCandle.close >= updatedCandle.open;\n          volumeSeriesRef.current.update({\n            time: Number(candleStartTime),\n            value: updatedCandle.volume,\n            color: chartType === 'candlestick' ? \n              (isGreen ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)') :\n              'rgba(107, 114, 128, 0.8)'\n          });\n        } catch (error) {\n          console.error(`❌ Failed to update volume with updated candle:`, error);\n        }\n      }\n    }\n  }, [symbol, chartType, indicators.volume.enabled, currentCandle, lastCandleTime, lastUpdateTime, getCandleStartTime, shouldStartNewCandle]);\n\n  // Update limit orders display\n  const updateLimitOrders = useCallback((orders) => {\n    setLimitOrders(orders);\n    \n    if (!candlestickSeriesRef.current) return;\n\n    // Add price lines for limit orders\n    orders.forEach(order => {\n      // This would need to be implemented with price line API\n      console.log('Limit order:', order);\n    });\n  }, []);\n\n  // Update indicators based on settings\n  const updateIndicators = useCallback((ohlcData) => {\n    if (!chartRef.current || !ohlcData.length) return;\n\n    // Clear existing indicator series\n    Object.keys(indicatorSeriesRefs.current).forEach(key => {\n      const series = indicatorSeriesRefs.current[key];\n      if (series) {\n        try {\n          chartRef.current.removeSeries(series);\n        } catch (e) {\n          // Series may already be removed\n        }\n      }\n    });\n    indicatorSeriesRefs.current = {};\n\n    // Add enabled indicators\n    Object.entries(indicators).forEach(([key, config]) => {\n      if (!config.enabled || !config.visible) return;\n\n      try {\n        if (key === 'sma20' || key === 'sma50') {\n          const period = key === 'sma20' ? 20 : 50;\n          const smaData = calculateSMA(ohlcData, period);\n          if (smaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `SMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false,\n            });\n            series.setData(smaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'ema12' || key === 'ema26') {\n          const period = config.period;\n          const emaData = calculateEMA(ohlcData, period);\n          if (emaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `EMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false,\n            });\n            series.setData(emaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'bollinger') {\n          const bollingerData = calculateBollingerBands(ohlcData, config.period, config.stdDev);\n          if (bollingerData.upper.length > 0) {\n            // Upper band\n            const upperSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Upper',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            upperSeries.setData(bollingerData.upper);\n            \n            // Lower band\n            const lowerSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Lower',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            lowerSeries.setData(bollingerData.lower);\n            \n            // Middle line (SMA)\n            const middleSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Middle',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            middleSeries.setData(bollingerData.middle);\n            \n            indicatorSeriesRefs.current[key] = { upper: upperSeries, lower: lowerSeries, middle: middleSeries };\n          }\n        }\n        // Add more indicators as needed (RSI, MACD would need separate price scales)\n      } catch (error) {\n        console.error(`Error adding indicator ${key}:`, error);\n      }\n    });\n  }, [indicators]);\n\n  // Update indicators when indicator settings change\n  useEffect(() => {\n    if (chartRef.current && chartData.length > 0) {\n      updateIndicators(chartData);\n    }\n  }, [indicators, updateIndicators, chartData]);\n\n  // Technical Analysis Functions\n  const calculateSMA = (data, period) => {\n    const result = [];\n    for (let i = period - 1; i < data.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        sum += data[i - j].close;\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat((sum / period).toFixed(2)),\n      });\n    }\n    return result;\n  };\n\n  const calculateEMA = (data, period) => {\n    const result = [];\n    const multiplier = 2 / (period + 1);\n    let ema = data[0]?.close || 0;\n    \n    for (let i = 0; i < data.length; i++) {\n      if (i === 0) {\n        ema = data[i].close;\n      } else {\n        ema = (data[i].close * multiplier) + (ema * (1 - multiplier));\n      }\n      \n      result.push({\n        time: data[i].time,\n        value: parseFloat(ema.toFixed(2)),\n      });\n    }\n    return result;\n  };\n\n  const calculateBollingerBands = (data, period, stdDev) => {\n    const smaData = calculateSMA(data, period);\n    const upper = [];\n    const lower = [];\n    const middle = [];\n    \n    for (let i = period - 1; i < data.length; i++) {\n      const smaValue = smaData[i - period + 1]?.value || 0;\n      \n      // Calculate standard deviation\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        const diff = data[i - j].close - smaValue;\n        sum += diff * diff;\n      }\n      const variance = sum / period;\n      const standardDeviation = Math.sqrt(variance);\n      \n      const upperValue = smaValue + (standardDeviation * stdDev);\n      const lowerValue = smaValue - (standardDeviation * stdDev);\n      \n      upper.push({ time: data[i].time, value: parseFloat(upperValue.toFixed(2)) });\n      lower.push({ time: data[i].time, value: parseFloat(lowerValue.toFixed(2)) });\n      middle.push({ time: data[i].time, value: parseFloat(smaValue.toFixed(2)) });\n    }\n    \n    return { upper, lower, middle };\n  };\n\n\n  // Add trade signal marker\n  const addTradeSignal = useCallback((signal) => {\n    if (!candlestickSeriesRef.current) return;\n    \n    const marker = {\n      time: signal.time || Math.floor(Date.now() / 1000),\n      position: signal.type === 'buy' ? 'belowBar' : 'aboveBar',\n      color: signal.type === 'buy' ? '#26a69a' : '#ef5350',\n      shape: signal.type === 'buy' ? 'arrowUp' : 'arrowDown',\n      text: `${signal.type.toUpperCase()}${signal.price ? `: $${signal.price}` : ''}${signal.confidence ? ` (${Math.round(signal.confidence * 100)}%)` : ''}`,\n      size: signal.strength || 1,\n    };\n    \n    setTradeSignals(prev => {\n      const newSignals = [...prev, marker];\n      candlestickSeriesRef.current.setMarkers(newSignals);\n      return newSignals;\n    });\n  }, []);\n\n  // Toggle indicator\n  const toggleIndicator = useCallback((indicator) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        enabled: !prev[indicator].enabled,\n      },\n    }));\n  }, []);\n\n  // Toggle indicator visibility\n  const toggleIndicatorVisibility = useCallback((indicator) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        visible: !prev[indicator].visible,\n      },\n    }));\n  }, []);\n\n  // Change timeframe\n  const changeTimeframe = useCallback((newTimeframe) => {\n    setTimeframe(newTimeframe);\n  }, []);\n\n  // Change chart type\n  const changeChartType = useCallback((newType) => {\n    setChartType(newType);\n  }, []);\n\n  // Filter indicators for search\n  const filteredIndicators = availableIndicators.filter(indicator =>\n    indicator.name.toLowerCase().includes(indicatorSearchTerm.toLowerCase())\n  );\n\n  // Add indicator from search\n  const addIndicatorFromSearch = useCallback((indicatorKey) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicatorKey]: {\n        ...prev[indicatorKey],\n        enabled: true,\n        visible: true,\n      },\n    }));\n    setShowIndicatorSearch(false);\n    setIndicatorSearchTerm('');\n  }, []);\n\n  return (\n    <div className=\"bg-gray-900 rounded-lg border border-gray-700 flex flex-col h-full\">\n      {/* Chart Header */}\n      <div className=\"flex items-center justify-between p-3 border-b border-gray-700 bg-gray-800 flex-wrap gap-2\">\n        <div className=\"flex items-center space-x-4 flex-wrap\">\n          {/* Symbol Selector */}\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setShowSymbolSearch(true)}\n              className=\"flex items-center space-x-2 px-3 py-1 rounded-md hover:bg-gray-700 transition-colors\"\n            >\n              <h3 className=\"text-lg font-semibold text-white\">{displaySymbol}</h3>\n              <svg className=\"w-4 h-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Live Price Display */}\n          {currentPrice && (\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-lg font-mono font-bold text-white\">\n                ${typeof currentPrice === 'number' ? currentPrice.toFixed(2) : currentPrice}\n              </span>\n              <span className={`text-sm font-medium ${\n                priceChange > 0 ? 'text-green-400' : priceChange < 0 ? 'text-red-400' : 'text-gray-400'\n              }`}>\n                {priceChange > 0 ? '+' : ''}{priceChange.toFixed(2)} ({((priceChange / currentPrice) * 100).toFixed(2)}%)\n              </span>\n            </div>\n          )}\n\n          {/* Timeframe Dropdown */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-xs text-gray-400\">Interval:</label>\n            <select\n              value={timeframe}\n              onChange={(e) => changeTimeframe(e.target.value)}\n              className=\"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-blue-500\"\n            >\n              {timeframes.map((tf) => (\n                <option key={tf.value} value={tf.value}>\n                  {tf.label}\n                </option>\n              ))}\n            </select>\n          </div>\n            \n          {/* Period Dropdown */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-xs text-gray-400\">Period:</label>\n            <select\n              value={selectedPeriod}\n              onChange={(e) => setSelectedPeriod(e.target.value)}\n              className=\"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-green-500\"\n            >\n              {periodOptions.map((period) => (\n                <option key={period.value} value={period.value}>\n                  {period.label} - {period.description}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {/* Right side controls */}\n        <div className=\"flex items-center space-x-2 flex-wrap\">\n          {/* Chart Type Dropdown */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-xs text-gray-400\">Type:</label>\n            <select\n              value={chartType}\n              onChange={(e) => changeChartType(e.target.value)}\n              className=\"bg-gray-700 text-white text-xs px-2 py-1 rounded border border-gray-600 focus:outline-none focus:border-purple-500\"\n            >\n              <option value=\"candlestick\">Candlestick</option>\n              <option value=\"line\">Line</option>\n              <option value=\"area\">Area</option>\n            </select>\n          </div>\n          \n          {/* Add Indicator Button */}\n          <button\n            onClick={() => setShowIndicatorSearch(!showIndicatorSearch)}\n            className=\"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\"\n            title=\"Add Indicator\"\n          >\n            <PlusIcon className=\"w-4 h-4\" />\n          </button>\n          \n          {/* Play/Pause Button */}\n          <button\n            onClick={() => setIsPlaying(!isPlaying)}\n            className=\"p-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\"\n            title={isPlaying ? 'Pause' : 'Resume'}\n          >\n            {isPlaying ? (\n              <PauseIcon className=\"w-4 h-4 text-white\" />\n            ) : (\n              <PlayIcon className=\"w-4 h-4 text-white\" />\n            )}\n          </button>\n          \n          {/* Settings Button */}\n          <button \n            className=\"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\"\n            title=\"Settings\"\n          >\n            <Cog6ToothIcon className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Enhanced Indicator Search Modal */}\n      {showIndicatorSearch && (\n        <div className=\"absolute top-16 right-4 z-50 bg-gray-800 border border-gray-600 rounded-lg shadow-xl w-96\">\n          <div className=\"p-4 border-b border-gray-700\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h4 className=\"text-lg font-semibold text-white\">Indicators & Strategies</h4>\n              <button\n                onClick={() => setShowIndicatorSearch(false)}\n                className=\"text-gray-400 hover:text-white p-1\"\n              >\n                ✕\n              </button>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <MagnifyingGlassIcon className=\"w-4 h-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Search indicators, strategies, or authors...\"\n                value={indicatorSearchTerm}\n                onChange={(e) => setIndicatorSearchTerm(e.target.value)}\n                className=\"flex-1 bg-gray-700 text-white placeholder-gray-400 border border-gray-600 rounded px-3 py-2 text-sm\"\n                autoFocus\n              />\n            </div>\n            <div className=\"flex flex-wrap gap-2 mt-3\">\n              {['All', 'Moving Averages', 'Oscillators', 'Trend', 'Volume', 'Volatility', 'Price Action', 'Support/Resistance'].map(cat => (\n                <button\n                  key={cat}\n                  className=\"px-2 py-1 text-xs rounded-full border border-gray-600 text-gray-300 hover:border-blue-500 hover:text-white transition-colors\"\n                >\n                  {cat}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div className=\"max-h-80 overflow-y-auto\">\n            {filteredIndicators.length > 0 ? (\n              <div className=\"p-2\">\n                {filteredIndicators.map((indicator) => (\n                  <button\n                    key={indicator.key}\n                    onClick={() => addIndicatorFromSearch(indicator.key)}\n                    className=\"w-full text-left p-3 rounded-lg hover:bg-gray-700 transition-colors mb-1\"\n                  >\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"font-medium text-white text-sm\">{indicator.name}</div>\n                        <div className=\"text-xs text-gray-400 mt-1\">\n                          <span className=\"inline-block bg-gray-700 px-2 py-0.5 rounded mr-2\">{indicator.category}</span>\n                          <span className=\"text-blue-400\">{indicator.author}</span>\n                        </div>\n                      </div>\n                      <div className=\"text-xs text-gray-500 ml-2\">\n                        {indicators[indicator.key]?.enabled ? '✓ Added' : '+ Add'}\n                      </div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            ) : (\n              <div className=\"p-4 text-center text-gray-400\">\n                <div className=\"text-sm\">No indicators found</div>\n                <div className=\"text-xs mt-1\">Try searching for \"RSI\", \"MACD\", or \"SuperTrend\"</div>\n              </div>\n            )}\n          </div>\n          <div className=\"p-3 border-t border-gray-700 bg-gray-750\">\n            <div className=\"text-xs text-gray-400\">\n              💡 Popular: SuperTrend, Wave Trend, SSL Channels, Smart Money Concepts\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Indicators Panel */}\n      <div className=\"p-3 border-b border-gray-700 bg-gray-850\">\n        <div className=\"flex flex-wrap gap-2\">\n          {Object.entries(indicators).map(([key, config]) => (\n            config.enabled && (\n              <div key={key} className=\"flex items-center space-x-1\">\n                <button\n                  onClick={() => toggleIndicator(key)}\n                  className={`px-3 py-1 text-xs rounded-full border transition-colors ${\n                    config.enabled && config.visible\n                      ? 'bg-blue-600 border-blue-600 text-white'\n                      : 'bg-transparent border-gray-600 text-gray-400 hover:border-blue-500'\n                  }`}\n                  style={{ borderColor: config.visible ? config.color : undefined }}\n                >\n                  <span \n                    className=\"inline-block w-2 h-2 rounded-full mr-1\" \n                    style={{ backgroundColor: config.color }}\n                  />\n                  {key.toUpperCase()}\n                </button>\n                <button\n                  onClick={() => toggleIndicatorVisibility(key)}\n                  className=\"p-1 text-gray-400 hover:text-white\"\n                  title={config.visible ? 'Hide' : 'Show'}\n                >\n                  {config.visible ? (\n                    <EyeIcon className=\"w-3 h-3\" />\n                  ) : (\n                    <EyeSlashIcon className=\"w-3 h-3\" />\n                  )}\n                </button>\n              </div>\n            )\n          ))}\n        </div>\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"flex-1 relative\">\n        <div \n          ref={chartContainerRef}\n          className=\"absolute inset-0\"\n        />\n        \n        {/* Limit Order Overlays */}\n        {limitOrders.map((order, index) => (\n          <div\n            key={index}\n            className=\"absolute right-4 bg-yellow-600 text-white text-xs px-2 py-1 rounded\"\n            style={{ top: `${order.yPosition || 50}%` }}\n          >\n            Limit {order.type}: ${order.price}\n          </div>\n        ))}\n      </div>\n      \n      {/* Chart Footer */}\n      <div className=\"p-3 border-t border-gray-700 bg-gray-800\">\n        <div className=\"flex items-center justify-between text-xs text-gray-400\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Live</span>\n            <span>Interval: {timeframe}</span>\n            <span className=\"flex items-center\">\n              <span className=\"w-2 h-2 bg-green-400 rounded-full mr-1\"></span>\n              Connected\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <span>Signals: {tradeSignals.length}</span>\n            <span>Orders: {limitOrders.length}</span>\n            <span>Last: {new Date().toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Dynamic Symbol Search Modal */}\n      <DynamicSymbolSearch\n        isOpen={showSymbolSearch}\n        onClose={() => setShowSymbolSearch(false)}\n        onSymbolSelect={(newSymbol, newDisplaySymbol) => {\n          if (onSymbolChange) onSymbolChange(newSymbol, newDisplaySymbol);\n        }}\n        currentSymbol={symbol}\n      />\n    </div>\n  );\n};\n\nexport default TradingChart;\n\n// Helper function to format numbers\nconst formatPrice = (price) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(price);\n};\n\n// Export for use in other components\nexport { formatPrice };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}