{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import{motion,AnimatePresence}from'framer-motion';import{PlayIcon,PauseIcon,CpuChipIcon,ShieldCheckIcon,ChartBarIcon,BoltIcon,PlusIcon,ChatBubbleLeftRightIcon,PaperAirplaneIcon,XMarkIcon}from'@heroicons/react/24/outline';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const AgentPipeline=_ref=>{let{currentSymbol='NQ=F',chartData=[],onSignalCreated}=_ref;const[agents,setAgents]=useState([]);const[agentThoughts,setAgentThoughts]=useState({});const[tradeSignals,setTradeSignals]=useState([]);const[isRunning,setIsRunning]=useState(false);const[selectedModel,setSelectedModel]=useState('ollama:phi3:mini');const[availableModels,setAvailableModels]=useState([]);const[chatHistory,setChatHistory]=useState({});const[activeChat,setActiveChat]=useState(null);const[chatMessage,setChatMessage]=useState('');const[isTyping,setIsTyping]=useState(false);const chatEndRef=useRef(null);// Fetch agents and models on component mount\nuseEffect(()=>{fetchAgents();fetchAvailableModels();},[]);// Check if market is open for NQ futures\nconst isMarketOpen=()=>{const now=new Date();const et=new Date(now.toLocaleString(\"en-US\",{timeZone:\"America/New_York\"}));const day=et.getDay();// 0=Sunday, 6=Saturday\nconst hour=et.getHours();// NQ trades nearly 24/5: Sunday 6 PM - Friday 5 PM ET\n// Daily maintenance: 5-6 PM ET\nif(day===0){// Sunday\nreturn hour>=18;// 6 PM or later\n}else if(day>=1&&day<=4){// Monday-Thursday\nreturn hour<17||hour>=18;// Before 5 PM or after 6 PM\n}else if(day===5){// Friday\nreturn hour<17;// Before 5 PM\n}return false;// Saturday\n};// Real agent analysis using current chart data\nconst triggerAgentAnalysis=useCallback(async(agentId,symbol,chartData)=>{if(!chartData||chartData.length===0)return;try{var _recentData;// Get the last 20 candles for analysis\nconst recentData=chartData.slice(-20);const currentPrice=(_recentData=recentData[recentData.length-1])===null||_recentData===void 0?void 0:_recentData.close;const response=await fetch('/api/agents/analyze-chart',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({agent_id:agentId,symbol:symbol,chart_data:recentData,current_price:currentPrice,model_provider:selectedModel.split(':')[0]||'ollama',model_name:selectedModel.split(':')[1]||'phi3:mini'})});if(response.ok){const analysis=await response.json();// Update agent thoughts with real analysis\nsetAgentThoughts(prev=>({...prev,[agentId]:{...prev[agentId],currentThought:analysis.reasoning||'Analysis complete',timestamp:new Date(),status:'active',lastAnalysis:analysis}}));// If analysis includes a trading signal, add it\nif(analysis.recommendation&&analysis.recommendation!=='HOLD'){const signal={id:Date.now(),type:analysis.recommendation.toLowerCase(),confidence:analysis.confidence/100,price:currentPrice,reason:analysis.reasoning,timestamp:new Date(),agent:agentId,symbol:symbol};setTradeSignals(prev=>[signal,...prev.slice(0,9)]);// Notify parent component to add signal to chart\nif(onSignalCreated){onSignalCreated(signal);}}}}catch(error){console.error('Failed to trigger agent analysis:',error);setAgentThoughts(prev=>({...prev,[agentId]:{...prev[agentId],currentThought:'Analysis failed - connection error',timestamp:new Date(),status:'error'}}));}},[selectedModel,onSignalCreated]);// Start real agent monitoring when running\nuseEffect(()=>{if(!isRunning||agents.length===0||chartData.length===0)return;const interval=setInterval(()=>{// Trigger real analysis for each agent\nagents.forEach(agent=>{triggerAgentAnalysis(agent.id,currentSymbol,chartData);});},30000);// Analyze every 30 seconds to avoid rate limiting\nreturn()=>clearInterval(interval);},[isRunning,agents,chartData,currentSymbol,triggerAgentAnalysis]);const fetchAgents=async()=>{try{const response=await fetch('/api/agents');const data=await response.json();setAgents(data.agents||[]);}catch(error){console.error('Failed to fetch agents:',error);}};const fetchAvailableModels=async()=>{try{const response=await fetch('/api/providers/models');const data=await response.json();setAvailableModels(data.models||[]);}catch(error){console.error('Failed to fetch models:',error);}};const createAgent=async agentType=>{try{const response=await fetch('/api/agents',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({agent_type:agentType,config:{symbol:currentSymbol,model:selectedModel,temperature:agentType==='risk'?0.0:0.1}})});if(response.ok){fetchAgents();}}catch(error){console.error('Failed to create agent:',error);}};const switchModel=async(provider,model)=>{try{const response=await fetch('/api/providers/switch-model',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({provider,model})});if(response.ok){setSelectedModel(`${provider}:${model}`);}}catch(error){console.error('Failed to switch model:',error);}};// Chat functionality\nconst sendMessage=async(agentId,message)=>{if(!message.trim())return;setIsTyping(true);// Add user message to chat history\nconst userMessage={id:Date.now(),sender:'user',message:message.trim(),timestamp:new Date()};setChatHistory(prev=>({...prev,[agentId]:[...(prev[agentId]||[]),userMessage]}));setChatMessage('');try{// Send message to agent for response\nconst response=await fetch('/api/agents/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({agent_id:agentId,message:message,symbol:currentSymbol,chart_data:chartData.slice(-20),// Last 20 candles for context\nchat_history:chatHistory[agentId]||[]})});if(response.ok){const result=await response.json();// Add agent response to chat history\nconst agentMessage={id:Date.now()+1,sender:'agent',message:result.response,timestamp:new Date(),analysis:result.analysis,signal:result.signal};setChatHistory(prev=>({...prev,[agentId]:[...(prev[agentId]||[]),agentMessage]}));// If agent created a signal, add it to the chart\nif(result.signal&&onSignalCreated){onSignalCreated({...result.signal,agent:agentId,symbol:currentSymbol,timestamp:new Date()});}}}catch(error){console.error('Failed to send message:',error);// Add error message\nconst errorMessage={id:Date.now()+1,sender:'agent',message:'Sorry, I\\'m having trouble connecting right now. Please try again.',timestamp:new Date(),error:true};setChatHistory(prev=>({...prev,[agentId]:[...(prev[agentId]||[]),errorMessage]}));}finally{setIsTyping(false);}};// Scroll to bottom of chat\nuseEffect(()=>{if(chatEndRef.current){chatEndRef.current.scrollIntoView({behavior:'smooth'});}},[chatHistory,activeChat]);// Quick action to request analysis\nconst requestAnalysis=async agentId=>{await sendMessage(agentId,`Please analyze the current ${currentSymbol} chart and provide your trading recommendation with reasoning.`);};// Quick action to place signal\nconst requestSignal=async(agentId,signalType)=>{const currentPrice=chartData.length>0?chartData[chartData.length-1].close:0;await sendMessage(agentId,`Based on the current ${currentSymbol} chart analysis, please place a ${signalType.toUpperCase()} signal at the current price of $${currentPrice}. Explain your reasoning.`);};const getAgentIcon=type=>{switch(type){case'analysis':return/*#__PURE__*/_jsx(ChartBarIcon,{className:\"w-6 h-6\"});case'execution':return/*#__PURE__*/_jsx(BoltIcon,{className:\"w-6 h-6\"});case'risk':return/*#__PURE__*/_jsx(ShieldCheckIcon,{className:\"w-6 h-6\"});default:return/*#__PURE__*/_jsx(CpuChipIcon,{className:\"w-6 h-6\"});}};const getSignalColor=type=>{switch(type){case'buy':return'text-green-400 border-green-500 bg-green-500 bg-opacity-10';case'sell':return'text-red-400 border-red-500 bg-red-500 bg-opacity-10';default:return'text-gray-400 border-gray-600 bg-gray-600 bg-opacity-10';}};const getAgentStatusColor=status=>{switch(status){case'active':return'bg-green-500';case'analyzing':return'bg-yellow-500 animate-pulse';case'error':return'bg-red-500';default:return'bg-gray-500';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-eerie-black-tertiary rounded-lg border border-dim-grey-700 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"text-xl font-semibold text-white flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(CpuChipIcon,{className:\"w-6 h-6 text-robin-egg-500\"}),/*#__PURE__*/_jsx(\"span\",{children:\"AI Agent Pipeline\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-300\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-500\",children:\"Trading:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-400 ml-1\",children:currentSymbol})]}),/*#__PURE__*/_jsx(\"select\",{value:selectedModel,onChange:e=>{const[provider,model]=e.target.value.split(':');switchModel(provider,model);},className:\"bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white text-sm focus:border-blue-500 focus:outline-none\",children:availableModels.map(model=>/*#__PURE__*/_jsxs(\"option\",{value:`${model.provider}:${model.name}`,children:[model.provider,\": \",model.name]},`${model.provider}:${model.name}`))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsRunning(!isRunning),className:`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${isRunning?'bg-red-600 hover:bg-red-700 text-white':'bg-green-600 hover:bg-green-700 text-white'}`,children:isRunning?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PauseIcon,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Stop Analysis\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PlayIcon,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Start Analysis\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:['analysis','execution','risk'].map(type=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>createAgent(type),className:\"flex items-center space-x-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white text-sm transition-colors\",children:[/*#__PURE__*/_jsx(PlusIcon,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Create \",type,\" Agent\"]})]},type))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lg:col-span-2 bg-gray-800 rounded-lg border border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-700\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold text-white\",children:[\"AI Trading Agents (\",agents.length,\")\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 space-y-4 max-h-96 overflow-y-auto\",children:[/*#__PURE__*/_jsx(AnimatePresence,{children:agents.map((agent,index)=>{var _agentThoughts$agent$,_agentThoughts$agent$2,_agentThoughts$agent$3,_agentThoughts$agent$4;return/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{delay:index*0.1},className:\"bg-gray-700 rounded-lg p-4 border border-gray-600\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-start justify-between mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-blue-400\",children:getAgentIcon(agent.type)}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"font-medium text-white capitalize\",children:[agent.type,\" Agent\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-400\",children:[currentSymbol,\" \\u2022 \",selectedModel.split(':')[1]||'AI Model']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:`w-2 h-2 rounded-full ${getAgentStatusColor(((_agentThoughts$agent$=agentThoughts[agent.id])===null||_agentThoughts$agent$===void 0?void 0:_agentThoughts$agent$.status)||'idle')}`}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-400\",children:((_agentThoughts$agent$2=agentThoughts[agent.id])===null||_agentThoughts$agent$2===void 0?void 0:_agentThoughts$agent$2.status)||'idle'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveChat(agent.id),className:\"p-1 text-gray-400 hover:text-blue-400 transition-colors\",title:\"Chat with agent\",children:/*#__PURE__*/_jsx(ChatBubbleLeftRightIcon,{className:\"w-4 h-4\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>requestAnalysis(agent.id),className:\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-xs rounded transition-colors\",children:\"Analyze Chart\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>requestSignal(agent.id,'buy'),className:\"px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-xs rounded transition-colors\",children:\"Buy Signal\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>requestSignal(agent.id,'sell'),className:\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded transition-colors\",children:\"Sell Signal\"})]}),((_agentThoughts$agent$3=agentThoughts[agent.id])===null||_agentThoughts$agent$3===void 0?void 0:_agentThoughts$agent$3.currentThought)&&/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},className:\"bg-gray-800 rounded-lg p-3 border border-gray-600 mt-3\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-300\",children:agentThoughts[agent.id].currentThought}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:(_agentThoughts$agent$4=agentThoughts[agent.id].timestamp)===null||_agentThoughts$agent$4===void 0?void 0:_agentThoughts$agent$4.toLocaleTimeString()})]},agentThoughts[agent.id].timestamp)]},agent.id);})}),agents.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-400\",children:[/*#__PURE__*/_jsx(CpuChipIcon,{className:\"w-12 h-12 mx-auto mb-4 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No active agents\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1\",children:\"Create agents to start real-time analysis\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg border border-gray-700\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-b border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-white\",children:\"Agent Chat\"}),activeChat&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveChat(null),className:\"text-gray-400 hover:text-white p-1\",children:/*#__PURE__*/_jsx(XMarkIcon,{className:\"w-4 h-4\"})})]})}),activeChat?/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col h-96\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-4 overflow-y-auto space-y-3\",children:[(chatHistory[activeChat]||[]).map(message=>/*#__PURE__*/_jsx(\"div\",{className:`flex ${message.sender==='user'?'justify-end':'justify-start'}`,children:/*#__PURE__*/_jsxs(\"div\",{className:`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${message.sender==='user'?'bg-blue-600 text-white':message.error?'bg-red-600 text-white':'bg-gray-700 text-gray-100'}`,children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:message.message}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs opacity-75 mt-1\",children:message.timestamp.toLocaleTimeString()}),message.signal&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 p-2 bg-gray-800 rounded text-xs\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Signal:\"}),\" \",message.signal.type.toUpperCase(),\" at $\",message.signal.price]})]})},message.id)),isTyping&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-start\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-700 text-gray-100 px-4 py-2 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.1s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\",style:{animationDelay:'0.2s'}})]})})}),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:chatMessage,onChange:e=>setChatMessage(e.target.value),onKeyPress:e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage(activeChat,chatMessage);}},placeholder:\"Ask about the chart, request analysis, or place signals...\",className:\"flex-1 bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\",disabled:isTyping}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>sendMessage(activeChat,chatMessage),disabled:!chatMessage.trim()||isTyping,className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white rounded-lg transition-colors\",children:/*#__PURE__*/_jsx(PaperAirplaneIcon,{className:\"w-4 h-4\"})})]})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"p-8 text-center text-gray-400\",children:[/*#__PURE__*/_jsx(ChatBubbleLeftRightIcon,{className:\"w-12 h-12 mx-auto mb-4 opacity-50\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select an agent to start chatting\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1\",children:\"Ask about market analysis, request signals, or get trading insights\"})]})]})]})]});};export default AgentPipeline;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","motion","AnimatePresence","PlayIcon","PauseIcon","CpuChipIcon","ShieldCheckIcon","ChartBarIcon","BoltIcon","PlusIcon","ChatBubbleLeftRightIcon","PaperAirplaneIcon","XMarkIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AgentPipeline","_ref","currentSymbol","chartData","onSignalCreated","agents","setAgents","agentThoughts","setAgentThoughts","tradeSignals","setTradeSignals","isRunning","setIsRunning","selectedModel","setSelectedModel","availableModels","setAvailableModels","chatHistory","setChatHistory","activeChat","setActiveChat","chatMessage","setChatMessage","isTyping","setIsTyping","chatEndRef","fetchAgents","fetchAvailableModels","isMarketOpen","now","Date","et","toLocaleString","timeZone","day","getDay","hour","getHours","triggerAgentAnalysis","agentId","symbol","length","_recentData","recentData","slice","currentPrice","close","response","fetch","method","headers","body","JSON","stringify","agent_id","chart_data","current_price","model_provider","split","model_name","ok","analysis","json","prev","currentThought","reasoning","timestamp","status","lastAnalysis","recommendation","signal","id","type","toLowerCase","confidence","price","reason","agent","error","console","interval","setInterval","forEach","clearInterval","data","models","createAgent","agentType","agent_type","config","model","temperature","switchModel","provider","sendMessage","message","trim","userMessage","sender","chat_history","result","agentMessage","errorMessage","current","scrollIntoView","behavior","requestAnalysis","requestSignal","signalType","toUpperCase","getAgentIcon","className","getSignalColor","getAgentStatusColor","children","value","onChange","e","target","map","name","onClick","index","_agentThoughts$agent$","_agentThoughts$agent$2","_agentThoughts$agent$3","_agentThoughts$agent$4","div","initial","opacity","y","animate","exit","transition","delay","title","toLocaleTimeString","style","animationDelay","ref","onKeyPress","key","shiftKey","preventDefault","placeholder","disabled"],"sources":["/Users/wilderbaldwin/Dev/tragen/frontend/src/components/AgentPipeline.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  PlayIcon,\n  PauseIcon,\n  CpuChipIcon,\n  ShieldCheckIcon,\n  ChartBarIcon,\n  BoltIcon,\n  PlusIcon,\n  ChatBubbleLeftRightIcon,\n  PaperAirplaneIcon,\n  XMarkIcon,\n} from '@heroicons/react/24/outline';\n\nconst AgentPipeline = ({ currentSymbol = 'NQ=F', chartData = [], onSignalCreated }) => {\n  const [agents, setAgents] = useState([]);\n  const [agentThoughts, setAgentThoughts] = useState({});\n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedModel, setSelectedModel] = useState('ollama:phi3:mini');\n  const [availableModels, setAvailableModels] = useState([]);\n  const [chatHistory, setChatHistory] = useState({});\n  const [activeChat, setActiveChat] = useState(null);\n  const [chatMessage, setChatMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n\n  // Fetch agents and models on component mount\n  useEffect(() => {\n    fetchAgents();\n    fetchAvailableModels();\n  }, []);\n\n  // Check if market is open for NQ futures\n  const isMarketOpen = () => {\n    const now = new Date();\n    const et = new Date(now.toLocaleString(\"en-US\", {timeZone: \"America/New_York\"}));\n    const day = et.getDay(); // 0=Sunday, 6=Saturday\n    const hour = et.getHours();\n    \n    // NQ trades nearly 24/5: Sunday 6 PM - Friday 5 PM ET\n    // Daily maintenance: 5-6 PM ET\n    \n    if (day === 0) { // Sunday\n      return hour >= 18; // 6 PM or later\n    } else if (day >= 1 && day <= 4) { // Monday-Thursday\n      return hour < 17 || hour >= 18; // Before 5 PM or after 6 PM\n    } else if (day === 5) { // Friday\n      return hour < 17; // Before 5 PM\n    }\n    return false; // Saturday\n  };\n\n  // Real agent analysis using current chart data\n  const triggerAgentAnalysis = useCallback(async (agentId, symbol, chartData) => {\n    if (!chartData || chartData.length === 0) return;\n    \n    try {\n      // Get the last 20 candles for analysis\n      const recentData = chartData.slice(-20);\n      const currentPrice = recentData[recentData.length - 1]?.close;\n      \n      const response = await fetch('/api/agents/analyze-chart', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          agent_id: agentId,\n          symbol: symbol,\n          chart_data: recentData,\n          current_price: currentPrice,\n          model_provider: selectedModel.split(':')[0] || 'ollama',\n          model_name: selectedModel.split(':')[1] || 'phi3:mini'\n        })\n      });\n      \n      if (response.ok) {\n        const analysis = await response.json();\n        \n        // Update agent thoughts with real analysis\n        setAgentThoughts(prev => ({\n          ...prev,\n          [agentId]: {\n            ...prev[agentId],\n            currentThought: analysis.reasoning || 'Analysis complete',\n            timestamp: new Date(),\n            status: 'active',\n            lastAnalysis: analysis\n          }\n        }));\n        \n        // If analysis includes a trading signal, add it\n        if (analysis.recommendation && analysis.recommendation !== 'HOLD') {\n          const signal = {\n            id: Date.now(),\n            type: analysis.recommendation.toLowerCase(),\n            confidence: analysis.confidence / 100,\n            price: currentPrice,\n            reason: analysis.reasoning,\n            timestamp: new Date(),\n            agent: agentId,\n            symbol: symbol\n          };\n          \n          setTradeSignals(prev => [signal, ...prev.slice(0, 9)]);\n          \n          // Notify parent component to add signal to chart\n          if (onSignalCreated) {\n            onSignalCreated(signal);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to trigger agent analysis:', error);\n      setAgentThoughts(prev => ({\n        ...prev,\n        [agentId]: {\n          ...prev[agentId],\n          currentThought: 'Analysis failed - connection error',\n          timestamp: new Date(),\n          status: 'error'\n        }\n      }));\n    }\n  }, [selectedModel, onSignalCreated]);\n\n  // Start real agent monitoring when running\n  useEffect(() => {\n    if (!isRunning || agents.length === 0 || chartData.length === 0) return;\n\n    const interval = setInterval(() => {\n      // Trigger real analysis for each agent\n      agents.forEach(agent => {\n        triggerAgentAnalysis(agent.id, currentSymbol, chartData);\n      });\n    }, 30000); // Analyze every 30 seconds to avoid rate limiting\n\n    return () => clearInterval(interval);\n  }, [isRunning, agents, chartData, currentSymbol, triggerAgentAnalysis]);\n\n  const fetchAgents = async () => {\n    try {\n      const response = await fetch('/api/agents');\n      const data = await response.json();\n      setAgents(data.agents || []);\n    } catch (error) {\n      console.error('Failed to fetch agents:', error);\n    }\n  };\n\n  const fetchAvailableModels = async () => {\n    try {\n      const response = await fetch('/api/providers/models');\n      const data = await response.json();\n      setAvailableModels(data.models || []);\n    } catch (error) {\n      console.error('Failed to fetch models:', error);\n    }\n  };\n\n  const createAgent = async (agentType) => {\n    try {\n      const response = await fetch('/api/agents', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          agent_type: agentType,\n          config: {\n            symbol: currentSymbol,\n            model: selectedModel,\n            temperature: agentType === 'risk' ? 0.0 : 0.1,\n          },\n        }),\n      });\n      \n      if (response.ok) {\n        fetchAgents();\n      }\n    } catch (error) {\n      console.error('Failed to create agent:', error);\n    }\n  };\n\n  const switchModel = async (provider, model) => {\n    try {\n      const response = await fetch('/api/providers/switch-model', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ provider, model }),\n      });\n      \n      if (response.ok) {\n        setSelectedModel(`${provider}:${model}`);\n      }\n    } catch (error) {\n      console.error('Failed to switch model:', error);\n    }\n  };\n  \n  // Chat functionality\n  const sendMessage = async (agentId, message) => {\n    if (!message.trim()) return;\n    \n    setIsTyping(true);\n    \n    // Add user message to chat history\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      message: message.trim(),\n      timestamp: new Date()\n    };\n    \n    setChatHistory(prev => ({\n      ...prev,\n      [agentId]: [...(prev[agentId] || []), userMessage]\n    }));\n    \n    setChatMessage('');\n    \n    try {\n      // Send message to agent for response\n      const response = await fetch('/api/agents/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          agent_id: agentId,\n          message: message,\n          symbol: currentSymbol,\n          chart_data: chartData.slice(-20), // Last 20 candles for context\n          chat_history: chatHistory[agentId] || []\n        })\n      });\n      \n      if (response.ok) {\n        const result = await response.json();\n        \n        // Add agent response to chat history\n        const agentMessage = {\n          id: Date.now() + 1,\n          sender: 'agent',\n          message: result.response,\n          timestamp: new Date(),\n          analysis: result.analysis,\n          signal: result.signal\n        };\n        \n        setChatHistory(prev => ({\n          ...prev,\n          [agentId]: [...(prev[agentId] || []), agentMessage]\n        }));\n        \n        // If agent created a signal, add it to the chart\n        if (result.signal && onSignalCreated) {\n          onSignalCreated({\n            ...result.signal,\n            agent: agentId,\n            symbol: currentSymbol,\n            timestamp: new Date()\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      \n      // Add error message\n      const errorMessage = {\n        id: Date.now() + 1,\n        sender: 'agent',\n        message: 'Sorry, I\\'m having trouble connecting right now. Please try again.',\n        timestamp: new Date(),\n        error: true\n      };\n      \n      setChatHistory(prev => ({\n        ...prev,\n        [agentId]: [...(prev[agentId] || []), errorMessage]\n      }));\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  \n  // Scroll to bottom of chat\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [chatHistory, activeChat]);\n  \n  // Quick action to request analysis\n  const requestAnalysis = async (agentId) => {\n    await sendMessage(agentId, `Please analyze the current ${currentSymbol} chart and provide your trading recommendation with reasoning.`);\n  };\n  \n  // Quick action to place signal\n  const requestSignal = async (agentId, signalType) => {\n    const currentPrice = chartData.length > 0 ? chartData[chartData.length - 1].close : 0;\n    await sendMessage(agentId, `Based on the current ${currentSymbol} chart analysis, please place a ${signalType.toUpperCase()} signal at the current price of $${currentPrice}. Explain your reasoning.`);\n  };\n\n  const getAgentIcon = (type) => {\n    switch (type) {\n      case 'analysis':\n        return <ChartBarIcon className=\"w-6 h-6\" />;\n      case 'execution':\n        return <BoltIcon className=\"w-6 h-6\" />;\n      case 'risk':\n        return <ShieldCheckIcon className=\"w-6 h-6\" />;\n      default:\n        return <CpuChipIcon className=\"w-6 h-6\" />;\n    }\n  };\n\n  const getSignalColor = (type) => {\n    switch (type) {\n      case 'buy':\n        return 'text-green-400 border-green-500 bg-green-500 bg-opacity-10';\n      case 'sell':\n        return 'text-red-400 border-red-500 bg-red-500 bg-opacity-10';\n      default:\n        return 'text-gray-400 border-gray-600 bg-gray-600 bg-opacity-10';\n    }\n  };\n  \n  const getAgentStatusColor = (status) => {\n    switch (status) {\n      case 'active':\n        return 'bg-green-500';\n      case 'analyzing':\n        return 'bg-yellow-500 animate-pulse';\n      case 'error':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Control Panel */}\n      <div className=\"bg-eerie-black-tertiary rounded-lg border border-dim-grey-700 p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-xl font-semibold text-white flex items-center space-x-2\">\n            <CpuChipIcon className=\"w-6 h-6 text-robin-egg-500\" />\n            <span>AI Agent Pipeline</span>\n          </h2>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Current Symbol Display */}\n            <div className=\"text-sm text-gray-300\">\n              <span className=\"text-gray-500\">Trading:</span>\n              <span className=\"font-semibold text-blue-400 ml-1\">{currentSymbol}</span>\n            </div>\n            \n            {/* Model Selector */}\n            <select\n              value={selectedModel}\n              onChange={(e) => {\n                const [provider, model] = e.target.value.split(':');\n                switchModel(provider, model);\n              }}\n              className=\"bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white text-sm focus:border-blue-500 focus:outline-none\"\n            >\n              {availableModels.map((model) => (\n                <option key={`${model.provider}:${model.name}`} value={`${model.provider}:${model.name}`}>\n                  {model.provider}: {model.name}\n                </option>\n              ))}\n            </select>\n            \n            {/* Start/Stop Button */}\n            <button\n              onClick={() => setIsRunning(!isRunning)}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${\n                isRunning\n                  ? 'bg-red-600 hover:bg-red-700 text-white'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n            >\n              {isRunning ? (\n                <>\n                  <PauseIcon className=\"w-4 h-4\" />\n                  <span>Stop Analysis</span>\n                </>\n              ) : (\n                <>\n                  <PlayIcon className=\"w-4 h-4\" />\n                  <span>Start Analysis</span>\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Agent Creation */}\n        <div className=\"flex flex-wrap gap-2\">\n          {['analysis', 'execution', 'risk'].map((type) => (\n            <button\n              key={type}\n              onClick={() => createAgent(type)}\n              className=\"flex items-center space-x-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg text-white text-sm transition-colors\"\n            >\n              <PlusIcon className=\"w-4 h-4\" />\n              <span>Create {type} Agent</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Active Agents */}\n        <div className=\"lg:col-span-2 bg-gray-800 rounded-lg border border-gray-700\">\n          <div className=\"p-4 border-b border-gray-700\">\n            <h3 className=\"text-lg font-semibold text-white\">AI Trading Agents ({agents.length})</h3>\n          </div>\n          \n          <div className=\"p-4 space-y-4 max-h-96 overflow-y-auto\">\n            <AnimatePresence>\n              {agents.map((agent, index) => (\n                <motion.div\n                  key={agent.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  transition={{ delay: index * 0.1 }}\n                  className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\"\n                >\n                  <div className=\"flex items-start justify-between mb-3\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"text-blue-400\">\n                        {getAgentIcon(agent.type)}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-medium text-white capitalize\">\n                          {agent.type} Agent\n                        </h4>\n                        <p className=\"text-xs text-gray-400\">\n                          {currentSymbol} • {selectedModel.split(':')[1] || 'AI Model'}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        getAgentStatusColor(agentThoughts[agent.id]?.status || 'idle')\n                      }`} />\n                      <span className=\"text-xs text-gray-400\">\n                        {agentThoughts[agent.id]?.status || 'idle'}\n                      </span>\n                      <button\n                        onClick={() => setActiveChat(agent.id)}\n                        className=\"p-1 text-gray-400 hover:text-blue-400 transition-colors\"\n                        title=\"Chat with agent\"\n                      >\n                        <ChatBubbleLeftRightIcon className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                  \n                  {/* Agent Actions */}\n                  <div className=\"mt-3 flex flex-wrap gap-2\">\n                    <button\n                      onClick={() => requestAnalysis(agent.id)}\n                      className=\"px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-xs rounded transition-colors\"\n                    >\n                      Analyze Chart\n                    </button>\n                    <button\n                      onClick={() => requestSignal(agent.id, 'buy')}\n                      className=\"px-3 py-1 bg-green-600 hover:bg-green-700 text-white text-xs rounded transition-colors\"\n                    >\n                      Buy Signal\n                    </button>\n                    <button\n                      onClick={() => requestSignal(agent.id, 'sell')}\n                      className=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded transition-colors\"\n                    >\n                      Sell Signal\n                    </button>\n                  </div>\n                  \n                  {/* Last Analysis */}\n                  {agentThoughts[agent.id]?.currentThought && (\n                    <motion.div\n                      key={agentThoughts[agent.id].timestamp}\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      className=\"bg-gray-800 rounded-lg p-3 border border-gray-600 mt-3\"\n                    >\n                      <p className=\"text-sm text-gray-300\">\n                        {agentThoughts[agent.id].currentThought}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {agentThoughts[agent.id].timestamp?.toLocaleTimeString()}\n                      </p>\n                    </motion.div>\n                  )}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n            \n            {agents.length === 0 && (\n              <div className=\"text-center py-8 text-gray-400\">\n                <CpuChipIcon className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                <p>No active agents</p>\n                <p className=\"text-sm mt-1\">Create agents to start real-time analysis</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Agent Chat Interface */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700\">\n          <div className=\"p-4 border-b border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-semibold text-white\">Agent Chat</h3>\n              {activeChat && (\n                <button\n                  onClick={() => setActiveChat(null)}\n                  className=\"text-gray-400 hover:text-white p-1\"\n                >\n                  <XMarkIcon className=\"w-4 h-4\" />\n                </button>\n              )}\n            </div>\n          </div>\n          \n          {activeChat ? (\n            <div className=\"flex flex-col h-96\">\n              {/* Chat Messages */}\n              <div className=\"flex-1 p-4 overflow-y-auto space-y-3\">\n                {(chatHistory[activeChat] || []).map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex ${\n                      message.sender === 'user' ? 'justify-end' : 'justify-start'\n                    }`}\n                  >\n                    <div\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                        message.sender === 'user'\n                          ? 'bg-blue-600 text-white'\n                          : message.error\n                          ? 'bg-red-600 text-white'\n                          : 'bg-gray-700 text-gray-100'\n                      }`}\n                    >\n                      <p className=\"text-sm\">{message.message}</p>\n                      <p className=\"text-xs opacity-75 mt-1\">\n                        {message.timestamp.toLocaleTimeString()}\n                      </p>\n                      {message.signal && (\n                        <div className=\"mt-2 p-2 bg-gray-800 rounded text-xs\">\n                          <strong>Signal:</strong> {message.signal.type.toUpperCase()} at ${message.signal.price}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n                {isTyping && (\n                  <div className=\"flex justify-start\">\n                    <div className=\"bg-gray-700 text-gray-100 px-4 py-2 rounded-lg\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                <div ref={chatEndRef} />\n              </div>\n              \n              {/* Chat Input */}\n              <div className=\"p-4 border-t border-gray-700\">\n                <div className=\"flex space-x-2\">\n                  <input\n                    type=\"text\"\n                    value={chatMessage}\n                    onChange={(e) => setChatMessage(e.target.value)}\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        sendMessage(activeChat, chatMessage);\n                      }\n                    }}\n                    placeholder=\"Ask about the chart, request analysis, or place signals...\"\n                    className=\"flex-1 bg-gray-700 border border-gray-600 rounded-lg px-3 py-2 text-white placeholder-gray-400 focus:outline-none focus:border-blue-500\"\n                    disabled={isTyping}\n                  />\n                  <button\n                    onClick={() => sendMessage(activeChat, chatMessage)}\n                    disabled={!chatMessage.trim() || isTyping}\n                    className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white rounded-lg transition-colors\"\n                  >\n                    <PaperAirplaneIcon className=\"w-4 h-4\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"p-8 text-center text-gray-400\">\n              <ChatBubbleLeftRightIcon className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p>Select an agent to start chatting</p>\n              <p className=\"text-sm mt-1\">Ask about market analysis, request signals, or get trading insights</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgentPipeline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}