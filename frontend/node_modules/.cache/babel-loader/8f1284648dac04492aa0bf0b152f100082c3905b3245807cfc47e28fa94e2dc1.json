{"ast":null,"code":"var _jsxFileName = \"/Users/wilderbaldwin/Dev/tragen/frontend/src/components/TradingChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { createChart, ColorType, CrosshairMode, LineStyle, PriceScaleMode } from 'lightweight-charts';\nimport { Cog6ToothIcon, ChartBarIcon, PlayIcon, PauseIcon, MagnifyingGlassIcon, PlusIcon, EyeIcon, EyeSlashIcon, AdjustmentsHorizontalIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TradingChart = ({\n  symbol = 'NQ=F',\n  height = 600,\n  apiBaseUrl = '',\n  onSignalReceived\n}) => {\n  _s();\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const volumeSeriesRef = useRef(null);\n  const indicatorSeriesRefs = useRef({});\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [timeframe, setTimeframe] = useState('5m');\n  const [chartType, setChartType] = useState('candlestick');\n  const [showDrawingTools, setShowDrawingTools] = useState(false);\n  const [showIndicatorSearch, setShowIndicatorSearch] = useState(false);\n  const [indicatorSearchTerm, setIndicatorSearchTerm] = useState('');\n  const [indicators, setIndicators] = useState({\n    sma20: {\n      enabled: true,\n      visible: true,\n      color: '#f59e0b',\n      period: 20\n    },\n    sma50: {\n      enabled: true,\n      visible: true,\n      color: '#8b5cf6',\n      period: 50\n    },\n    ema12: {\n      enabled: false,\n      visible: true,\n      color: '#06b6d4',\n      period: 12\n    },\n    ema26: {\n      enabled: false,\n      visible: true,\n      color: '#f97316',\n      period: 26\n    },\n    rsi: {\n      enabled: false,\n      visible: true,\n      color: '#a855f7',\n      period: 14,\n      overbought: 70,\n      oversold: 30\n    },\n    macd: {\n      enabled: false,\n      visible: true,\n      color: '#10b981',\n      fastPeriod: 12,\n      slowPeriod: 26,\n      signalPeriod: 9\n    },\n    bollinger: {\n      enabled: false,\n      visible: true,\n      color: '#ef4444',\n      period: 20,\n      stdDev: 2\n    },\n    volume: {\n      enabled: true,\n      visible: true,\n      color: '#6b7280'\n    },\n    stochastic: {\n      enabled: false,\n      visible: true,\n      color: '#ec4899',\n      kPeriod: 14,\n      dPeriod: 3\n    },\n    williams: {\n      enabled: false,\n      visible: true,\n      color: '#84cc16',\n      period: 14\n    },\n    atr: {\n      enabled: false,\n      visible: true,\n      color: '#f59e0b',\n      period: 14\n    },\n    adx: {\n      enabled: false,\n      visible: true,\n      color: '#6366f1',\n      period: 14\n    }\n  });\n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [priceChange, setPriceChange] = useState(0);\n  const [limitOrders, setLimitOrders] = useState([]);\n  const [, setChartData] = useState([]);\n\n  // Available timeframes\n  const timeframes = [{\n    value: '1m',\n    label: '1m',\n    seconds: 60\n  }, {\n    value: '5m',\n    label: '5m',\n    seconds: 300\n  }, {\n    value: '15m',\n    label: '15m',\n    seconds: 900\n  }, {\n    value: '30m',\n    label: '30m',\n    seconds: 1800\n  }, {\n    value: '1h',\n    label: '1H',\n    seconds: 3600\n  }, {\n    value: '4h',\n    label: '4H',\n    seconds: 14400\n  }, {\n    value: '1d',\n    label: '1D',\n    seconds: 86400\n  }];\n\n  // Available indicators for search\n  const availableIndicators = [{\n    key: 'sma20',\n    name: 'Simple Moving Average (20)',\n    category: 'Moving Averages'\n  }, {\n    key: 'sma50',\n    name: 'Simple Moving Average (50)',\n    category: 'Moving Averages'\n  }, {\n    key: 'ema12',\n    name: 'Exponential Moving Average (12)',\n    category: 'Moving Averages'\n  }, {\n    key: 'ema26',\n    name: 'Exponential Moving Average (26)',\n    category: 'Moving Averages'\n  }, {\n    key: 'rsi',\n    name: 'Relative Strength Index',\n    category: 'Oscillators'\n  }, {\n    key: 'macd',\n    name: 'MACD',\n    category: 'Oscillators'\n  }, {\n    key: 'bollinger',\n    name: 'Bollinger Bands',\n    category: 'Volatility'\n  }, {\n    key: 'stochastic',\n    name: 'Stochastic Oscillator',\n    category: 'Oscillators'\n  }, {\n    key: 'williams',\n    name: 'Williams %R',\n    category: 'Oscillators'\n  }, {\n    key: 'atr',\n    name: 'Average True Range',\n    category: 'Volatility'\n  }, {\n    key: 'adx',\n    name: 'Average Directional Index',\n    category: 'Trend'\n  }, {\n    key: 'volume',\n    name: 'Volume',\n    category: 'Volume'\n  }];\n\n  // Initialize chart\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: {\n          type: ColorType.Solid,\n          color: '#0a0a0b'\n        },\n        textColor: '#f9fafb',\n        fontSize: 12,\n        fontFamily: 'Trebuchet MS'\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(55, 65, 81, 0.5)',\n          style: LineStyle.Dotted\n        },\n        horzLines: {\n          color: 'rgba(55, 65, 81, 0.5)',\n          style: LineStyle.Dotted\n        }\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n        vertLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6'\n        },\n        horzLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6'\n        }\n      },\n      rightPriceScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        entireTextOnly: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25\n        }\n      },\n      leftPriceScale: {\n        visible: false\n      },\n      timeScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: time => {\n          const date = new Date(time * 1000);\n          return date.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          });\n        }\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: height,\n      handleScroll: {\n        mouseWheel: true,\n        pressedMouseMove: true,\n        horzTouchDrag: true,\n        vertTouchDrag: true\n      },\n      handleScale: {\n        axisPressedMouseMove: true,\n        mouseWheel: true,\n        pinch: true\n      }\n    });\n    chartRef.current = chart;\n\n    // Main price series\n    let mainSeries;\n    if (chartType === 'candlestick') {\n      mainSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350'\n      });\n    } else if (chartType === 'line') {\n      mainSeries = chart.addLineSeries({\n        color: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n        crosshairMarkerRadius: 6,\n        crosshairMarkerBorderColor: '#14b8a6',\n        crosshairMarkerBackgroundColor: '#14b8a6'\n      });\n    } else if (chartType === 'area') {\n      mainSeries = chart.addAreaSeries({\n        topColor: 'rgba(20, 184, 166, 0.4)',\n        bottomColor: 'rgba(20, 184, 166, 0.0)',\n        lineColor: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true\n      });\n    }\n    candlestickSeriesRef.current = mainSeries;\n\n    // Volume series\n    const volumeSeries = chart.addHistogramSeries({\n      color: 'rgba(107, 114, 128, 0.8)',\n      priceFormat: {\n        type: 'volume'\n      },\n      priceScaleId: 'volume'\n    });\n    volumeSeriesRef.current = volumeSeries;\n\n    // Set up volume price scale\n    chart.priceScale('volume').applyOptions({\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0\n      },\n      mode: PriceScaleMode.Percentage\n    });\n\n    // Handle resize\n    const handleResize = () => {\n      if (chartContainerRef.current) {\n        chart.applyOptions({\n          width: chartContainerRef.current.clientWidth\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      // Clean up indicator series\n      Object.values(indicatorSeriesRefs.current).forEach(series => {\n        if (series && chart) {\n          try {\n            chart.removeSeries(series);\n          } catch (e) {\n            // Series may already be removed\n          }\n        }\n      });\n      indicatorSeriesRefs.current = {};\n      if (chart) {\n        chart.remove();\n      }\n    };\n  }, [height, chartType]);\n\n  // WebSocket connection for real-time data\n  useEffect(() => {\n    if (!isPlaying || !candlestickSeriesRef.current) return;\n    let ws;\n    let reconnectTimeout;\n    const connectWebSocket = () => {\n      try {\n        // Try to connect to WebSocket for real-time data\n        ws = new WebSocket(`ws://localhost:8001/ws/market/${symbol}`);\n        ws.onopen = () => {\n          console.log('WebSocket connected for real-time data');\n        };\n        ws.onmessage = event => {\n          const data = JSON.parse(event.data);\n          if (data.type === 'price_update') {\n            updateRealTimePrice(data);\n          } else if (data.type === 'signal') {\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'limit_order') {\n            updateLimitOrders(data.orders);\n          }\n        };\n        ws.onerror = error => {\n          console.error('WebSocket error:', error);\n        };\n        ws.onclose = () => {\n          console.log('WebSocket disconnected, attempting to reconnect...');\n          reconnectTimeout = setTimeout(connectWebSocket, 3000);\n        };\n      } catch (error) {\n        console.error('Failed to connect WebSocket:', error);\n        fetchHistoricalData();\n      }\n    };\n    const fetchHistoricalData = async () => {\n      try {\n        const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n        const interval = (timeframeConfig === null || timeframeConfig === void 0 ? void 0 : timeframeConfig.value) || '5m';\n\n        // Fetch historical data\n        const historicalResponse = await fetch(`${apiBaseUrl}/api/market/historical?symbol=${symbol}&period=1d&interval=${interval}`);\n        if (historicalResponse.ok) {\n          const historicalData = await historicalResponse.json();\n          if (historicalData !== null && historicalData !== void 0 && historicalData.data && Array.isArray(historicalData.data)) {\n            const ohlcData = historicalData.data.map(item => ({\n              time: Math.floor(new Date(item.date).getTime() / 1000),\n              open: parseFloat(item.open),\n              high: parseFloat(item.high),\n              low: parseFloat(item.low),\n              close: parseFloat(item.close),\n              volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n            })).sort((a, b) => a.time - b.time);\n            if (ohlcData.length > 0) {\n              setChartData(ohlcData);\n              updateChartSeries(ohlcData);\n              setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n              return;\n            }\n          }\n        }\n\n        // Fallback to current price endpoint\n        const response = await fetch(`${apiBaseUrl}/api/market/nq-price`);\n        if (response.ok) {\n          const data = await response.json();\n          setCurrentPrice(data.current_price);\n\n          // Generate mock data for demo\n          const now = Date.now() / 1000;\n          const mockData = generateMockOHLCData(data.current_price, now);\n          setChartData(mockData);\n          updateChartSeries(mockData);\n        } else {\n          throw new Error('Failed to fetch current price');\n        }\n      } catch (error) {\n        console.error('Failed to fetch market data:', error);\n        // Generate mock data as last resort\n        const now = Date.now() / 1000;\n        const mockData = generateMockOHLCData(16500, now);\n        setChartData(mockData);\n        updateChartSeries(mockData);\n        setCurrentPrice(16500);\n      }\n    };\n\n    // Try WebSocket first, fallback to HTTP\n    connectWebSocket();\n\n    // Also fetch initial historical data\n    fetchHistoricalData();\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n    };\n  }, [isPlaying, timeframe, symbol]);\n\n  // Generate mock OHLC data for demonstration\n  const generateMockOHLCData = (currentPrice, endTime) => {\n    const data = [];\n    let price = currentPrice - Math.random() * 100;\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    const intervalSeconds = (timeframeConfig === null || timeframeConfig === void 0 ? void 0 : timeframeConfig.seconds) || 300;\n    const periods = Math.min(200, Math.floor(86400 / intervalSeconds)); // Max 200 periods or 1 day\n\n    for (let i = periods; i >= 0; i--) {\n      const time = endTime - i * intervalSeconds;\n      const open = price;\n      const volatility = 2 + Math.random() * 8; // Increased volatility for NQ\n      const high = open + Math.random() * volatility;\n      const low = open - Math.random() * volatility;\n      const close = low + Math.random() * (high - low);\n      const volume = Math.floor(500 + Math.random() * 3000);\n      data.push({\n        time: Math.floor(time),\n        open: parseFloat(open.toFixed(2)),\n        high: parseFloat(high.toFixed(2)),\n        low: parseFloat(low.toFixed(2)),\n        close: parseFloat(close.toFixed(2)),\n        volume: volume\n      });\n\n      // Add some trend to make it more realistic\n      price = close + (Math.random() - 0.5) * 2;\n    }\n    return data;\n  };\n\n  // Update chart series with new data\n  const updateChartSeries = useCallback(ohlcData => {\n    if (!candlestickSeriesRef.current || !volumeSeriesRef.current) return;\n\n    // Update main series based on chart type\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.setData(ohlcData);\n    } else if (chartType === 'line') {\n      const lineData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close\n      }));\n      candlestickSeriesRef.current.setData(lineData);\n    } else if (chartType === 'area') {\n      const areaData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close\n      }));\n      candlestickSeriesRef.current.setData(areaData);\n    }\n\n    // Update volume\n    if (indicators.volume.enabled) {\n      const volumeData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.volume,\n        color: chartType === 'candlestick' ? item.close >= item.open ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)' : 'rgba(107, 114, 128, 0.8)'\n      }));\n      volumeSeriesRef.current.setData(volumeData);\n    }\n\n    // Update all enabled indicators\n    updateIndicators(ohlcData);\n  }, [chartType, indicators]);\n\n  // Update real-time price\n  const updateRealTimePrice = useCallback(priceData => {\n    if (!candlestickSeriesRef.current) return;\n    const currentTime = Math.floor(Date.now() / 1000);\n    const newPoint = {\n      time: currentTime,\n      ...priceData\n    };\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.update(newPoint);\n    } else {\n      candlestickSeriesRef.current.update({\n        time: currentTime,\n        value: priceData.close\n      });\n    }\n    setCurrentPrice(priceData.close);\n    setPriceChange(priceData.change || 0);\n  }, [chartType]);\n\n  // Update limit orders display\n  const updateLimitOrders = useCallback(orders => {\n    setLimitOrders(orders);\n    if (!candlestickSeriesRef.current) return;\n\n    // Add price lines for limit orders\n    orders.forEach(order => {\n      // This would need to be implemented with price line API\n      console.log('Limit order:', order);\n    });\n  }, []);\n\n  // Update indicators based on settings\n  const updateIndicators = useCallback(ohlcData => {\n    if (!chartRef.current || !ohlcData.length) return;\n\n    // Clear existing indicator series\n    Object.keys(indicatorSeriesRefs.current).forEach(key => {\n      const series = indicatorSeriesRefs.current[key];\n      if (series) {\n        try {\n          chartRef.current.removeSeries(series);\n        } catch (e) {\n          // Series may already be removed\n        }\n      }\n    });\n    indicatorSeriesRefs.current = {};\n\n    // Add enabled indicators\n    Object.entries(indicators).forEach(([key, config]) => {\n      if (!config.enabled || !config.visible) return;\n      try {\n        if (key === 'sma20' || key === 'sma50') {\n          const period = key === 'sma20' ? 20 : 50;\n          const smaData = calculateSMA(ohlcData, period);\n          if (smaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `SMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false\n            });\n            series.setData(smaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'ema12' || key === 'ema26') {\n          const period = config.period;\n          const emaData = calculateEMA(ohlcData, period);\n          if (emaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `EMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false\n            });\n            series.setData(emaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'bollinger') {\n          const bollingerData = calculateBollingerBands(ohlcData, config.period, config.stdDev);\n          if (bollingerData.upper.length > 0) {\n            // Upper band\n            const upperSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Upper',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            upperSeries.setData(bollingerData.upper);\n\n            // Lower band\n            const lowerSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Lower',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            lowerSeries.setData(bollingerData.lower);\n\n            // Middle line (SMA)\n            const middleSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Middle',\n              lastValueVisible: false,\n              priceLineVisible: false\n            });\n            middleSeries.setData(bollingerData.middle);\n            indicatorSeriesRefs.current[key] = {\n              upper: upperSeries,\n              lower: lowerSeries,\n              middle: middleSeries\n            };\n          }\n        }\n        // Add more indicators as needed (RSI, MACD would need separate price scales)\n      } catch (error) {\n        console.error(`Error adding indicator ${key}:`, error);\n      }\n    });\n  }, [indicators]);\n\n  // Technical Analysis Functions\n  const calculateSMA = (data, period) => {\n    const result = [];\n    for (let i = period - 1; i < data.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        sum += data[i - j].close;\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat((sum / period).toFixed(2))\n      });\n    }\n    return result;\n  };\n  const calculateEMA = (data, period) => {\n    var _data$;\n    const result = [];\n    const multiplier = 2 / (period + 1);\n    let ema = ((_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.close) || 0;\n    for (let i = 0; i < data.length; i++) {\n      if (i === 0) {\n        ema = data[i].close;\n      } else {\n        ema = data[i].close * multiplier + ema * (1 - multiplier);\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat(ema.toFixed(2))\n      });\n    }\n    return result;\n  };\n  const calculateBollingerBands = (data, period, stdDev) => {\n    const smaData = calculateSMA(data, period);\n    const upper = [];\n    const lower = [];\n    const middle = [];\n    for (let i = period - 1; i < data.length; i++) {\n      var _smaData;\n      const smaValue = ((_smaData = smaData[i - period + 1]) === null || _smaData === void 0 ? void 0 : _smaData.value) || 0;\n\n      // Calculate standard deviation\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        const diff = data[i - j].close - smaValue;\n        sum += diff * diff;\n      }\n      const variance = sum / period;\n      const standardDeviation = Math.sqrt(variance);\n      const upperValue = smaValue + standardDeviation * stdDev;\n      const lowerValue = smaValue - standardDeviation * stdDev;\n      upper.push({\n        time: data[i].time,\n        value: parseFloat(upperValue.toFixed(2))\n      });\n      lower.push({\n        time: data[i].time,\n        value: parseFloat(lowerValue.toFixed(2))\n      });\n      middle.push({\n        time: data[i].time,\n        value: parseFloat(smaValue.toFixed(2))\n      });\n    }\n    return {\n      upper,\n      lower,\n      middle\n    };\n  };\n  const calculateRSI = (data, period) => {\n    // RSI calculation implementation\n    // This would be displayed on a separate price scale\n    return [];\n  };\n  const calculateMACD = (data, fastPeriod, slowPeriod, signalPeriod) => {\n    // MACD calculation implementation\n    // This would be displayed on a separate price scale\n    return {\n      macd: [],\n      signal: [],\n      histogram: []\n    };\n  };\n\n  // Add trade signal marker\n  const addTradeSignal = useCallback(signal => {\n    if (!candlestickSeriesRef.current) return;\n    const marker = {\n      time: signal.time || Math.floor(Date.now() / 1000),\n      position: signal.type === 'buy' ? 'belowBar' : 'aboveBar',\n      color: signal.type === 'buy' ? '#26a69a' : '#ef5350',\n      shape: signal.type === 'buy' ? 'arrowUp' : 'arrowDown',\n      text: `${signal.type.toUpperCase()}${signal.price ? `: $${signal.price}` : ''}${signal.confidence ? ` (${Math.round(signal.confidence * 100)}%)` : ''}`,\n      size: signal.strength || 1\n    };\n    setTradeSignals(prev => {\n      const newSignals = [...prev, marker];\n      candlestickSeriesRef.current.setMarkers(newSignals);\n      return newSignals;\n    });\n  }, []);\n\n  // Toggle indicator\n  const toggleIndicator = useCallback(indicator => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        enabled: !prev[indicator].enabled\n      }\n    }));\n  }, []);\n\n  // Toggle indicator visibility\n  const toggleIndicatorVisibility = useCallback(indicator => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        visible: !prev[indicator].visible\n      }\n    }));\n  }, []);\n\n  // Change timeframe\n  const changeTimeframe = useCallback(newTimeframe => {\n    setTimeframe(newTimeframe);\n  }, []);\n\n  // Change chart type\n  const changeChartType = useCallback(newType => {\n    setChartType(newType);\n  }, []);\n\n  // Filter indicators for search\n  const filteredIndicators = availableIndicators.filter(indicator => indicator.name.toLowerCase().includes(indicatorSearchTerm.toLowerCase()));\n\n  // Add indicator from search\n  const addIndicatorFromSearch = useCallback(indicatorKey => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicatorKey]: {\n        ...prev[indicatorKey],\n        enabled: true,\n        visible: true\n      }\n    }));\n    setShowIndicatorSearch(false);\n    setIndicatorSearchTerm('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-900 rounded-lg border border-gray-700 flex flex-col h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-3 border-b border-gray-700 bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-white\",\n            children: symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-1\",\n            children: timeframes.map(tf => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => changeTimeframe(tf.value),\n              className: `px-2 py-1 text-xs rounded transition-colors ${timeframe === tf.value ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n              children: tf.label\n            }, tf.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl font-mono text-white\",\n            children: [\"$\", currentPrice.toLocaleString(undefined, {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm font-medium flex items-center ${priceChange >= 0 ? 'text-green-400' : 'text-red-400'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `mr-1 ${priceChange >= 0 ? '↗' : '↘'}`,\n              children: priceChange >= 0 ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this), priceChange >= 0 ? '+' : '', priceChange.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1 mr-2\",\n          children: ['candlestick', 'line', 'area'].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeChartType(type),\n            className: `p-2 rounded-lg transition-colors ${chartType === type ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n            title: type.charAt(0).toUpperCase() + type.slice(1),\n            children: /*#__PURE__*/_jsxDEV(ChartBarIcon, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowDrawingTools(!showDrawingTools),\n          className: `p-2 rounded-lg transition-colors ${showDrawingTools ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}`,\n          title: \"Drawing Tools\",\n          children: /*#__PURE__*/_jsxDEV(AdjustmentsHorizontalIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowIndicatorSearch(!showIndicatorSearch),\n          className: \"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\",\n          title: \"Add Indicator\",\n          children: /*#__PURE__*/_jsxDEV(PlusIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsPlaying(!isPlaying),\n          className: \"p-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\",\n          title: isPlaying ? 'Pause' : 'Resume',\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n            className: \"w-4 h-4 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(PlayIcon, {\n            className: \"w-4 h-4 text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\",\n          title: \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(Cog6ToothIcon, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), showIndicatorSearch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-16 right-4 z-50 bg-gray-800 border border-gray-600 rounded-lg shadow-xl p-4 w-80\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(MagnifyingGlassIcon, {\n          className: \"w-4 h-4 text-gray-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search indicators...\",\n          value: indicatorSearchTerm,\n          onChange: e => setIndicatorSearchTerm(e.target.value),\n          className: \"flex-1 bg-gray-700 text-white placeholder-gray-400 border border-gray-600 rounded px-2 py-1 text-sm\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowIndicatorSearch(false),\n          className: \"text-gray-400 hover:text-white\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-h-64 overflow-y-auto\",\n        children: filteredIndicators.map(indicator => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 mb-1\",\n            children: indicator.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addIndicatorFromSearch(indicator.key),\n            className: \"w-full text-left p-2 text-sm text-white hover:bg-gray-700 rounded\",\n            children: indicator.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 17\n          }, this)]\n        }, indicator.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-b border-gray-700 bg-gray-850\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: Object.entries(indicators).map(([key, config]) => config.enabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleIndicator(key),\n            className: `px-3 py-1 text-xs rounded-full border transition-colors ${config.enabled && config.visible ? 'bg-blue-600 border-blue-600 text-white' : 'bg-transparent border-gray-600 text-gray-400 hover:border-blue-500'}`,\n            style: {\n              borderColor: config.visible ? config.color : undefined\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block w-2 h-2 rounded-full mr-1\",\n              style: {\n                backgroundColor: config.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 19\n            }, this), key.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleIndicatorVisibility(key),\n            className: \"p-1 text-gray-400 hover:text-white\",\n            title: config.visible ? 'Hide' : 'Show',\n            children: config.visible ? /*#__PURE__*/_jsxDEV(EyeIcon, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(EyeSlashIcon, {\n              className: \"w-3 h-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartContainerRef,\n        className: \"absolute inset-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this), limitOrders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-4 bg-yellow-600 text-white text-xs px-2 py-1 rounded\",\n        style: {\n          top: `${order.yPosition || 50}%`\n        },\n        children: [\"Limit \", order.type, \": $\", order.price]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-t border-gray-700 bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-xs text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Interval: \", timeframe]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-2 h-2 bg-green-400 rounded-full mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this), \"Connected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Signals: \", tradeSignals.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Orders: \", limitOrders.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Last: \", new Date().toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 697,\n    columnNumber: 5\n  }, this);\n};\n_s(TradingChart, \"e6x6XMiKJMstjvJuW8CVALI+dN8=\");\n_c = TradingChart;\nexport default TradingChart;\n\n// Helper function to format numbers\nconst formatPrice = price => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(price);\n};\n\n// Export for use in other components\nexport { formatPrice };\nvar _c;\n$RefreshReg$(_c, \"TradingChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","createChart","ColorType","CrosshairMode","LineStyle","PriceScaleMode","Cog6ToothIcon","ChartBarIcon","PlayIcon","PauseIcon","MagnifyingGlassIcon","PlusIcon","EyeIcon","EyeSlashIcon","AdjustmentsHorizontalIcon","jsxDEV","_jsxDEV","TradingChart","symbol","height","apiBaseUrl","onSignalReceived","_s","chartContainerRef","chartRef","candlestickSeriesRef","volumeSeriesRef","indicatorSeriesRefs","isPlaying","setIsPlaying","timeframe","setTimeframe","chartType","setChartType","showDrawingTools","setShowDrawingTools","showIndicatorSearch","setShowIndicatorSearch","indicatorSearchTerm","setIndicatorSearchTerm","indicators","setIndicators","sma20","enabled","visible","color","period","sma50","ema12","ema26","rsi","overbought","oversold","macd","fastPeriod","slowPeriod","signalPeriod","bollinger","stdDev","volume","stochastic","kPeriod","dPeriod","williams","atr","adx","tradeSignals","setTradeSignals","currentPrice","setCurrentPrice","priceChange","setPriceChange","limitOrders","setLimitOrders","setChartData","timeframes","value","label","seconds","availableIndicators","key","name","category","current","chart","layout","background","type","Solid","textColor","fontSize","fontFamily","grid","vertLines","style","Dotted","horzLines","crosshair","mode","Normal","vertLine","width","Dashed","labelBackgroundColor","horzLine","rightPriceScale","borderColor","entireTextOnly","scaleMargins","top","bottom","leftPriceScale","timeScale","timeVisible","secondsVisible","tickMarkFormatter","time","date","Date","toLocaleTimeString","hour","minute","hour12","clientWidth","handleScroll","mouseWheel","pressedMouseMove","horzTouchDrag","vertTouchDrag","handleScale","axisPressedMouseMove","pinch","mainSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","addLineSeries","lineWidth","crosshairMarkerVisible","crosshairMarkerRadius","crosshairMarkerBorderColor","crosshairMarkerBackgroundColor","addAreaSeries","topColor","bottomColor","lineColor","volumeSeries","addHistogramSeries","priceFormat","priceScaleId","priceScale","applyOptions","Percentage","handleResize","window","addEventListener","removeEventListener","Object","values","forEach","series","removeSeries","e","remove","ws","reconnectTimeout","connectWebSocket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","updateRealTimePrice","addTradeSignal","signal","updateLimitOrders","orders","onerror","error","onclose","setTimeout","fetchHistoricalData","timeframeConfig","find","tf","interval","historicalResponse","fetch","ok","historicalData","json","Array","isArray","ohlcData","map","item","Math","floor","getTime","open","parseFloat","high","low","close","random","sort","a","b","length","updateChartSeries","response","current_price","now","mockData","generateMockOHLCData","Error","clearTimeout","endTime","price","intervalSeconds","periods","min","i","volatility","push","toFixed","setData","lineData","areaData","volumeData","updateIndicators","priceData","currentTime","newPoint","update","change","order","keys","entries","config","smaData","calculateSMA","title","lastValueVisible","priceLineVisible","emaData","calculateEMA","bollingerData","calculateBollingerBands","upper","upperSeries","lowerSeries","lower","middleSeries","middle","result","sum","j","_data$","multiplier","ema","_smaData","smaValue","diff","variance","standardDeviation","sqrt","upperValue","lowerValue","calculateRSI","calculateMACD","histogram","marker","position","shape","text","toUpperCase","confidence","round","size","strength","prev","newSignals","setMarkers","toggleIndicator","indicator","toggleIndicatorVisibility","changeTimeframe","newTimeframe","changeChartType","newType","filteredIndicators","filter","toLowerCase","includes","addIndicatorFromSearch","indicatorKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","charAt","slice","placeholder","onChange","target","autoFocus","backgroundColor","ref","index","yPosition","_c","formatPrice","Intl","NumberFormat","currency","format","$RefreshReg$"],"sources":["/Users/wilderbaldwin/Dev/tragen/frontend/src/components/TradingChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { createChart, ColorType, CrosshairMode, LineStyle, PriceScaleMode } from 'lightweight-charts';\nimport {\n  Cog6ToothIcon,\n  ChartBarIcon,\n  PlayIcon,\n  PauseIcon,\n  MagnifyingGlassIcon,\n  PlusIcon,\n  EyeIcon,\n  EyeSlashIcon,\n  AdjustmentsHorizontalIcon,\n} from '@heroicons/react/24/outline';\n\nconst TradingChart = ({ symbol = 'NQ=F', height = 600, apiBaseUrl = '', onSignalReceived }) => {\n  const chartContainerRef = useRef(null);\n  const chartRef = useRef(null);\n  const candlestickSeriesRef = useRef(null);\n  const volumeSeriesRef = useRef(null);\n  const indicatorSeriesRefs = useRef({});\n  \n  const [isPlaying, setIsPlaying] = useState(true);\n  const [timeframe, setTimeframe] = useState('5m');\n  const [chartType, setChartType] = useState('candlestick');\n  const [showDrawingTools, setShowDrawingTools] = useState(false);\n  const [showIndicatorSearch, setShowIndicatorSearch] = useState(false);\n  const [indicatorSearchTerm, setIndicatorSearchTerm] = useState('');\n  \n  const [indicators, setIndicators] = useState({\n    sma20: { enabled: true, visible: true, color: '#f59e0b', period: 20 },\n    sma50: { enabled: true, visible: true, color: '#8b5cf6', period: 50 },\n    ema12: { enabled: false, visible: true, color: '#06b6d4', period: 12 },\n    ema26: { enabled: false, visible: true, color: '#f97316', period: 26 },\n    rsi: { enabled: false, visible: true, color: '#a855f7', period: 14, overbought: 70, oversold: 30 },\n    macd: { enabled: false, visible: true, color: '#10b981', fastPeriod: 12, slowPeriod: 26, signalPeriod: 9 },\n    bollinger: { enabled: false, visible: true, color: '#ef4444', period: 20, stdDev: 2 },\n    volume: { enabled: true, visible: true, color: '#6b7280' },\n    stochastic: { enabled: false, visible: true, color: '#ec4899', kPeriod: 14, dPeriod: 3 },\n    williams: { enabled: false, visible: true, color: '#84cc16', period: 14 },\n    atr: { enabled: false, visible: true, color: '#f59e0b', period: 14 },\n    adx: { enabled: false, visible: true, color: '#6366f1', period: 14 },\n  });\n  \n  const [tradeSignals, setTradeSignals] = useState([]);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [priceChange, setPriceChange] = useState(0);\n  const [limitOrders, setLimitOrders] = useState([]);\n  const [, setChartData] = useState([]);\n  \n  // Available timeframes\n  const timeframes = [\n    { value: '1m', label: '1m', seconds: 60 },\n    { value: '5m', label: '5m', seconds: 300 },\n    { value: '15m', label: '15m', seconds: 900 },\n    { value: '30m', label: '30m', seconds: 1800 },\n    { value: '1h', label: '1H', seconds: 3600 },\n    { value: '4h', label: '4H', seconds: 14400 },\n    { value: '1d', label: '1D', seconds: 86400 },\n  ];\n\n  // Available indicators for search\n  const availableIndicators = [\n    { key: 'sma20', name: 'Simple Moving Average (20)', category: 'Moving Averages' },\n    { key: 'sma50', name: 'Simple Moving Average (50)', category: 'Moving Averages' },\n    { key: 'ema12', name: 'Exponential Moving Average (12)', category: 'Moving Averages' },\n    { key: 'ema26', name: 'Exponential Moving Average (26)', category: 'Moving Averages' },\n    { key: 'rsi', name: 'Relative Strength Index', category: 'Oscillators' },\n    { key: 'macd', name: 'MACD', category: 'Oscillators' },\n    { key: 'bollinger', name: 'Bollinger Bands', category: 'Volatility' },\n    { key: 'stochastic', name: 'Stochastic Oscillator', category: 'Oscillators' },\n    { key: 'williams', name: 'Williams %R', category: 'Oscillators' },\n    { key: 'atr', name: 'Average True Range', category: 'Volatility' },\n    { key: 'adx', name: 'Average Directional Index', category: 'Trend' },\n    { key: 'volume', name: 'Volume', category: 'Volume' },\n  ];\n\n  // Initialize chart\n  useEffect(() => {\n    if (!chartContainerRef.current) return;\n\n    const chart = createChart(chartContainerRef.current, {\n      layout: {\n        background: { type: ColorType.Solid, color: '#0a0a0b' },\n        textColor: '#f9fafb',\n        fontSize: 12,\n        fontFamily: 'Trebuchet MS',\n      },\n      grid: {\n        vertLines: { color: 'rgba(55, 65, 81, 0.5)', style: LineStyle.Dotted },\n        horzLines: { color: 'rgba(55, 65, 81, 0.5)', style: LineStyle.Dotted },\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n        vertLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6',\n        },\n        horzLine: {\n          color: '#14b8a6',\n          width: 1,\n          style: LineStyle.Dashed,\n          labelBackgroundColor: '#14b8a6',\n        },\n      },\n      rightPriceScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        entireTextOnly: true,\n        scaleMargins: {\n          top: 0.1,\n          bottom: 0.25,\n        },\n      },\n      leftPriceScale: {\n        visible: false,\n      },\n      timeScale: {\n        borderColor: '#374151',\n        textColor: '#9ca3af',\n        timeVisible: true,\n        secondsVisible: false,\n        tickMarkFormatter: (time) => {\n          const date = new Date(time * 1000);\n          return date.toLocaleTimeString('en-US', { \n            hour: '2-digit', \n            minute: '2-digit',\n            hour12: false \n          });\n        },\n      },\n      width: chartContainerRef.current.clientWidth,\n      height: height,\n      handleScroll: {\n        mouseWheel: true,\n        pressedMouseMove: true,\n        horzTouchDrag: true,\n        vertTouchDrag: true,\n      },\n      handleScale: {\n        axisPressedMouseMove: true,\n        mouseWheel: true,\n        pinch: true,\n      },\n    });\n\n    chartRef.current = chart;\n\n    // Main price series\n    let mainSeries;\n    if (chartType === 'candlestick') {\n      mainSeries = chart.addCandlestickSeries({\n        upColor: '#26a69a',\n        downColor: '#ef5350',\n        borderVisible: false,\n        wickUpColor: '#26a69a',\n        wickDownColor: '#ef5350',\n      });\n    } else if (chartType === 'line') {\n      mainSeries = chart.addLineSeries({\n        color: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n        crosshairMarkerRadius: 6,\n        crosshairMarkerBorderColor: '#14b8a6',\n        crosshairMarkerBackgroundColor: '#14b8a6',\n      });\n    } else if (chartType === 'area') {\n      mainSeries = chart.addAreaSeries({\n        topColor: 'rgba(20, 184, 166, 0.4)',\n        bottomColor: 'rgba(20, 184, 166, 0.0)',\n        lineColor: '#14b8a6',\n        lineWidth: 2,\n        crosshairMarkerVisible: true,\n      });\n    }\n\n    candlestickSeriesRef.current = mainSeries;\n\n    // Volume series\n    const volumeSeries = chart.addHistogramSeries({\n      color: 'rgba(107, 114, 128, 0.8)',\n      priceFormat: {\n        type: 'volume',\n      },\n      priceScaleId: 'volume',\n    });\n\n    volumeSeriesRef.current = volumeSeries;\n\n    // Set up volume price scale\n    chart.priceScale('volume').applyOptions({\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n      },\n      mode: PriceScaleMode.Percentage,\n    });\n\n    // Handle resize\n    const handleResize = () => {\n      if (chartContainerRef.current) {\n        chart.applyOptions({\n          width: chartContainerRef.current.clientWidth,\n        });\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      // Clean up indicator series\n      Object.values(indicatorSeriesRefs.current).forEach(series => {\n        if (series && chart) {\n          try {\n            chart.removeSeries(series);\n          } catch (e) {\n            // Series may already be removed\n          }\n        }\n      });\n      indicatorSeriesRefs.current = {};\n      if (chart) {\n        chart.remove();\n      }\n    };\n  }, [height, chartType]);\n\n  // WebSocket connection for real-time data\n  useEffect(() => {\n    if (!isPlaying || !candlestickSeriesRef.current) return;\n\n    let ws;\n    let reconnectTimeout;\n\n    const connectWebSocket = () => {\n      try {\n        // Try to connect to WebSocket for real-time data\n        ws = new WebSocket(`ws://localhost:8001/ws/market/${symbol}`);\n        \n        ws.onopen = () => {\n          console.log('WebSocket connected for real-time data');\n        };\n\n        ws.onmessage = (event) => {\n          const data = JSON.parse(event.data);\n          if (data.type === 'price_update') {\n            updateRealTimePrice(data);\n          } else if (data.type === 'signal') {\n            addTradeSignal(data.signal);\n            if (onSignalReceived) {\n              onSignalReceived(data.signal);\n            }\n          } else if (data.type === 'limit_order') {\n            updateLimitOrders(data.orders);\n          }\n        };\n\n        ws.onerror = (error) => {\n          console.error('WebSocket error:', error);\n        };\n\n        ws.onclose = () => {\n          console.log('WebSocket disconnected, attempting to reconnect...');\n          reconnectTimeout = setTimeout(connectWebSocket, 3000);\n        };\n      } catch (error) {\n        console.error('Failed to connect WebSocket:', error);\n        fetchHistoricalData();\n      }\n    };\n\n    const fetchHistoricalData = async () => {\n      try {\n        const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n        const interval = timeframeConfig?.value || '5m';\n        \n        // Fetch historical data\n        const historicalResponse = await fetch(\n          `${apiBaseUrl}/api/market/historical?symbol=${symbol}&period=1d&interval=${interval}`\n        );\n        \n        if (historicalResponse.ok) {\n          const historicalData = await historicalResponse.json();\n          \n          if (historicalData?.data && Array.isArray(historicalData.data)) {\n            const ohlcData = historicalData.data.map(item => ({\n              time: Math.floor(new Date(item.date).getTime() / 1000),\n              open: parseFloat(item.open),\n              high: parseFloat(item.high),\n              low: parseFloat(item.low),\n              close: parseFloat(item.close),\n              volume: parseFloat(item.volume || Math.floor(1000 + Math.random() * 5000))\n            })).sort((a, b) => a.time - b.time);\n            \n            if (ohlcData.length > 0) {\n              setChartData(ohlcData);\n              updateChartSeries(ohlcData);\n              setCurrentPrice(ohlcData[ohlcData.length - 1].close);\n              return;\n            }\n          }\n        }\n        \n        // Fallback to current price endpoint\n        const response = await fetch(`${apiBaseUrl}/api/market/nq-price`);\n        if (response.ok) {\n          const data = await response.json();\n          setCurrentPrice(data.current_price);\n          \n          // Generate mock data for demo\n          const now = Date.now() / 1000;\n          const mockData = generateMockOHLCData(data.current_price, now);\n          setChartData(mockData);\n          updateChartSeries(mockData);\n        } else {\n          throw new Error('Failed to fetch current price');\n        }\n        \n      } catch (error) {\n        console.error('Failed to fetch market data:', error);\n        // Generate mock data as last resort\n        const now = Date.now() / 1000;\n        const mockData = generateMockOHLCData(16500, now);\n        setChartData(mockData);\n        updateChartSeries(mockData);\n        setCurrentPrice(16500);\n      }\n    };\n\n    // Try WebSocket first, fallback to HTTP\n    connectWebSocket();\n    \n    // Also fetch initial historical data\n    fetchHistoricalData();\n\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n    };\n  }, [isPlaying, timeframe, symbol]);\n\n  // Generate mock OHLC data for demonstration\n  const generateMockOHLCData = (currentPrice, endTime) => {\n    const data = [];\n    let price = currentPrice - Math.random() * 100;\n    const timeframeConfig = timeframes.find(tf => tf.value === timeframe);\n    const intervalSeconds = timeframeConfig?.seconds || 300;\n    const periods = Math.min(200, Math.floor(86400 / intervalSeconds)); // Max 200 periods or 1 day\n    \n    for (let i = periods; i >= 0; i--) {\n      const time = endTime - (i * intervalSeconds);\n      const open = price;\n      const volatility = 2 + Math.random() * 8; // Increased volatility for NQ\n      const high = open + Math.random() * volatility;\n      const low = open - Math.random() * volatility;\n      const close = low + Math.random() * (high - low);\n      const volume = Math.floor(500 + Math.random() * 3000);\n      \n      data.push({\n        time: Math.floor(time),\n        open: parseFloat(open.toFixed(2)),\n        high: parseFloat(high.toFixed(2)),\n        low: parseFloat(low.toFixed(2)),\n        close: parseFloat(close.toFixed(2)),\n        volume: volume,\n      });\n      \n      // Add some trend to make it more realistic\n      price = close + (Math.random() - 0.5) * 2;\n    }\n    \n    return data;\n  };\n\n  // Update chart series with new data\n  const updateChartSeries = useCallback((ohlcData) => {\n    if (!candlestickSeriesRef.current || !volumeSeriesRef.current) return;\n\n    // Update main series based on chart type\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.setData(ohlcData);\n    } else if (chartType === 'line') {\n      const lineData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close,\n      }));\n      candlestickSeriesRef.current.setData(lineData);\n    } else if (chartType === 'area') {\n      const areaData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.close,\n      }));\n      candlestickSeriesRef.current.setData(areaData);\n    }\n\n    // Update volume\n    if (indicators.volume.enabled) {\n      const volumeData = ohlcData.map(item => ({\n        time: item.time,\n        value: item.volume,\n        color: (chartType === 'candlestick' ? \n          (item.close >= item.open ? 'rgba(38, 166, 154, 0.8)' : 'rgba(239, 83, 80, 0.8)') :\n          'rgba(107, 114, 128, 0.8)'),\n      }));\n      volumeSeriesRef.current.setData(volumeData);\n    }\n\n    // Update all enabled indicators\n    updateIndicators(ohlcData);\n  }, [chartType, indicators]);\n\n  // Update real-time price\n  const updateRealTimePrice = useCallback((priceData) => {\n    if (!candlestickSeriesRef.current) return;\n\n    const currentTime = Math.floor(Date.now() / 1000);\n    const newPoint = {\n      time: currentTime,\n      ...priceData,\n    };\n\n    if (chartType === 'candlestick') {\n      candlestickSeriesRef.current.update(newPoint);\n    } else {\n      candlestickSeriesRef.current.update({\n        time: currentTime,\n        value: priceData.close,\n      });\n    }\n\n    setCurrentPrice(priceData.close);\n    setPriceChange(priceData.change || 0);\n  }, [chartType]);\n\n  // Update limit orders display\n  const updateLimitOrders = useCallback((orders) => {\n    setLimitOrders(orders);\n    \n    if (!candlestickSeriesRef.current) return;\n\n    // Add price lines for limit orders\n    orders.forEach(order => {\n      // This would need to be implemented with price line API\n      console.log('Limit order:', order);\n    });\n  }, []);\n\n  // Update indicators based on settings\n  const updateIndicators = useCallback((ohlcData) => {\n    if (!chartRef.current || !ohlcData.length) return;\n\n    // Clear existing indicator series\n    Object.keys(indicatorSeriesRefs.current).forEach(key => {\n      const series = indicatorSeriesRefs.current[key];\n      if (series) {\n        try {\n          chartRef.current.removeSeries(series);\n        } catch (e) {\n          // Series may already be removed\n        }\n      }\n    });\n    indicatorSeriesRefs.current = {};\n\n    // Add enabled indicators\n    Object.entries(indicators).forEach(([key, config]) => {\n      if (!config.enabled || !config.visible) return;\n\n      try {\n        if (key === 'sma20' || key === 'sma50') {\n          const period = key === 'sma20' ? 20 : 50;\n          const smaData = calculateSMA(ohlcData, period);\n          if (smaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `SMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false,\n            });\n            series.setData(smaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'ema12' || key === 'ema26') {\n          const period = config.period;\n          const emaData = calculateEMA(ohlcData, period);\n          if (emaData.length > 0) {\n            const series = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 2,\n              title: `EMA ${period}`,\n              lastValueVisible: true,\n              priceLineVisible: false,\n            });\n            series.setData(emaData);\n            indicatorSeriesRefs.current[key] = series;\n          }\n        } else if (key === 'bollinger') {\n          const bollingerData = calculateBollingerBands(ohlcData, config.period, config.stdDev);\n          if (bollingerData.upper.length > 0) {\n            // Upper band\n            const upperSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Upper',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            upperSeries.setData(bollingerData.upper);\n            \n            // Lower band\n            const lowerSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Lower',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            lowerSeries.setData(bollingerData.lower);\n            \n            // Middle line (SMA)\n            const middleSeries = chartRef.current.addLineSeries({\n              color: config.color,\n              lineWidth: 1,\n              title: 'BB Middle',\n              lastValueVisible: false,\n              priceLineVisible: false,\n            });\n            middleSeries.setData(bollingerData.middle);\n            \n            indicatorSeriesRefs.current[key] = { upper: upperSeries, lower: lowerSeries, middle: middleSeries };\n          }\n        }\n        // Add more indicators as needed (RSI, MACD would need separate price scales)\n      } catch (error) {\n        console.error(`Error adding indicator ${key}:`, error);\n      }\n    });\n  }, [indicators]);\n\n  // Technical Analysis Functions\n  const calculateSMA = (data, period) => {\n    const result = [];\n    for (let i = period - 1; i < data.length; i++) {\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        sum += data[i - j].close;\n      }\n      result.push({\n        time: data[i].time,\n        value: parseFloat((sum / period).toFixed(2)),\n      });\n    }\n    return result;\n  };\n\n  const calculateEMA = (data, period) => {\n    const result = [];\n    const multiplier = 2 / (period + 1);\n    let ema = data[0]?.close || 0;\n    \n    for (let i = 0; i < data.length; i++) {\n      if (i === 0) {\n        ema = data[i].close;\n      } else {\n        ema = (data[i].close * multiplier) + (ema * (1 - multiplier));\n      }\n      \n      result.push({\n        time: data[i].time,\n        value: parseFloat(ema.toFixed(2)),\n      });\n    }\n    return result;\n  };\n\n  const calculateBollingerBands = (data, period, stdDev) => {\n    const smaData = calculateSMA(data, period);\n    const upper = [];\n    const lower = [];\n    const middle = [];\n    \n    for (let i = period - 1; i < data.length; i++) {\n      const smaValue = smaData[i - period + 1]?.value || 0;\n      \n      // Calculate standard deviation\n      let sum = 0;\n      for (let j = 0; j < period; j++) {\n        const diff = data[i - j].close - smaValue;\n        sum += diff * diff;\n      }\n      const variance = sum / period;\n      const standardDeviation = Math.sqrt(variance);\n      \n      const upperValue = smaValue + (standardDeviation * stdDev);\n      const lowerValue = smaValue - (standardDeviation * stdDev);\n      \n      upper.push({ time: data[i].time, value: parseFloat(upperValue.toFixed(2)) });\n      lower.push({ time: data[i].time, value: parseFloat(lowerValue.toFixed(2)) });\n      middle.push({ time: data[i].time, value: parseFloat(smaValue.toFixed(2)) });\n    }\n    \n    return { upper, lower, middle };\n  };\n\n  const calculateRSI = (data, period) => {\n    // RSI calculation implementation\n    // This would be displayed on a separate price scale\n    return [];\n  };\n\n  const calculateMACD = (data, fastPeriod, slowPeriod, signalPeriod) => {\n    // MACD calculation implementation\n    // This would be displayed on a separate price scale\n    return { macd: [], signal: [], histogram: [] };\n  };\n\n  // Add trade signal marker\n  const addTradeSignal = useCallback((signal) => {\n    if (!candlestickSeriesRef.current) return;\n    \n    const marker = {\n      time: signal.time || Math.floor(Date.now() / 1000),\n      position: signal.type === 'buy' ? 'belowBar' : 'aboveBar',\n      color: signal.type === 'buy' ? '#26a69a' : '#ef5350',\n      shape: signal.type === 'buy' ? 'arrowUp' : 'arrowDown',\n      text: `${signal.type.toUpperCase()}${signal.price ? `: $${signal.price}` : ''}${signal.confidence ? ` (${Math.round(signal.confidence * 100)}%)` : ''}`,\n      size: signal.strength || 1,\n    };\n    \n    setTradeSignals(prev => {\n      const newSignals = [...prev, marker];\n      candlestickSeriesRef.current.setMarkers(newSignals);\n      return newSignals;\n    });\n  }, []);\n\n  // Toggle indicator\n  const toggleIndicator = useCallback((indicator) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        enabled: !prev[indicator].enabled,\n      },\n    }));\n  }, []);\n\n  // Toggle indicator visibility\n  const toggleIndicatorVisibility = useCallback((indicator) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicator]: {\n        ...prev[indicator],\n        visible: !prev[indicator].visible,\n      },\n    }));\n  }, []);\n\n  // Change timeframe\n  const changeTimeframe = useCallback((newTimeframe) => {\n    setTimeframe(newTimeframe);\n  }, []);\n\n  // Change chart type\n  const changeChartType = useCallback((newType) => {\n    setChartType(newType);\n  }, []);\n\n  // Filter indicators for search\n  const filteredIndicators = availableIndicators.filter(indicator =>\n    indicator.name.toLowerCase().includes(indicatorSearchTerm.toLowerCase())\n  );\n\n  // Add indicator from search\n  const addIndicatorFromSearch = useCallback((indicatorKey) => {\n    setIndicators(prev => ({\n      ...prev,\n      [indicatorKey]: {\n        ...prev[indicatorKey],\n        enabled: true,\n        visible: true,\n      },\n    }));\n    setShowIndicatorSearch(false);\n    setIndicatorSearchTerm('');\n  }, []);\n\n  return (\n    <div className=\"bg-gray-900 rounded-lg border border-gray-700 flex flex-col h-full\">\n      {/* Chart Header */}\n      <div className=\"flex items-center justify-between p-3 border-b border-gray-700 bg-gray-800\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"text-lg font-semibold text-white\">{symbol}</h3>\n            <div className=\"flex items-center space-x-1\">\n              {/* Timeframe Selector */}\n              {timeframes.map((tf) => (\n                <button\n                  key={tf.value}\n                  onClick={() => changeTimeframe(tf.value)}\n                  className={`px-2 py-1 text-xs rounded transition-colors ${\n                    timeframe === tf.value\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                  }`}\n                >\n                  {tf.label}\n                </button>\n              ))}\n            </div>\n          </div>\n          \n          {currentPrice && (\n            <div className=\"flex items-center space-x-3\">\n              <span className=\"text-xl font-mono text-white\">\n                ${currentPrice.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n              </span>\n              <span className={`text-sm font-medium flex items-center ${\n                priceChange >= 0 ? 'text-green-400' : 'text-red-400'\n              }`}>\n                <span className={`mr-1 ${priceChange >= 0 ? '↗' : '↘'}`}>\n                  {priceChange >= 0 ? '▲' : '▼'}\n                </span>\n                {priceChange >= 0 ? '+' : ''}{priceChange.toFixed(2)}\n              </span>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Chart Type Selector */}\n          <div className=\"flex items-center space-x-1 mr-2\">\n            {['candlestick', 'line', 'area'].map((type) => (\n              <button\n                key={type}\n                onClick={() => changeChartType(type)}\n                className={`p-2 rounded-lg transition-colors ${\n                  chartType === type\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n                title={type.charAt(0).toUpperCase() + type.slice(1)}\n              >\n                <ChartBarIcon className=\"w-4 h-4\" />\n              </button>\n            ))}\n          </div>\n          \n          {/* Drawing Tools Toggle */}\n          <button\n            onClick={() => setShowDrawingTools(!showDrawingTools)}\n            className={`p-2 rounded-lg transition-colors ${\n              showDrawingTools\n                ? 'bg-blue-600 text-white'\n                : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n            }`}\n            title=\"Drawing Tools\"\n          >\n            <AdjustmentsHorizontalIcon className=\"w-4 h-4\" />\n          </button>\n          \n          {/* Add Indicator Button */}\n          <button\n            onClick={() => setShowIndicatorSearch(!showIndicatorSearch)}\n            className=\"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\"\n            title=\"Add Indicator\"\n          >\n            <PlusIcon className=\"w-4 h-4\" />\n          </button>\n          \n          {/* Play/Pause Button */}\n          <button\n            onClick={() => setIsPlaying(!isPlaying)}\n            className=\"p-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\"\n            title={isPlaying ? 'Pause' : 'Resume'}\n          >\n            {isPlaying ? (\n              <PauseIcon className=\"w-4 h-4 text-white\" />\n            ) : (\n              <PlayIcon className=\"w-4 h-4 text-white\" />\n            )}\n          </button>\n          \n          {/* Settings Button */}\n          <button \n            className=\"p-2 rounded-lg bg-gray-700 text-gray-300 hover:bg-gray-600 transition-colors\"\n            title=\"Settings\"\n          >\n            <Cog6ToothIcon className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Indicator Search Modal */}\n      {showIndicatorSearch && (\n        <div className=\"absolute top-16 right-4 z-50 bg-gray-800 border border-gray-600 rounded-lg shadow-xl p-4 w-80\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <MagnifyingGlassIcon className=\"w-4 h-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search indicators...\"\n              value={indicatorSearchTerm}\n              onChange={(e) => setIndicatorSearchTerm(e.target.value)}\n              className=\"flex-1 bg-gray-700 text-white placeholder-gray-400 border border-gray-600 rounded px-2 py-1 text-sm\"\n              autoFocus\n            />\n            <button\n              onClick={() => setShowIndicatorSearch(false)}\n              className=\"text-gray-400 hover:text-white\"\n            >\n              ✕\n            </button>\n          </div>\n          <div className=\"max-h-64 overflow-y-auto\">\n            {filteredIndicators.map((indicator) => (\n              <div key={indicator.key} className=\"mb-2\">\n                <div className=\"text-xs text-gray-400 mb-1\">{indicator.category}</div>\n                <button\n                  onClick={() => addIndicatorFromSearch(indicator.key)}\n                  className=\"w-full text-left p-2 text-sm text-white hover:bg-gray-700 rounded\"\n                >\n                  {indicator.name}\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Indicators Panel */}\n      <div className=\"p-3 border-b border-gray-700 bg-gray-850\">\n        <div className=\"flex flex-wrap gap-2\">\n          {Object.entries(indicators).map(([key, config]) => (\n            config.enabled && (\n              <div key={key} className=\"flex items-center space-x-1\">\n                <button\n                  onClick={() => toggleIndicator(key)}\n                  className={`px-3 py-1 text-xs rounded-full border transition-colors ${\n                    config.enabled && config.visible\n                      ? 'bg-blue-600 border-blue-600 text-white'\n                      : 'bg-transparent border-gray-600 text-gray-400 hover:border-blue-500'\n                  }`}\n                  style={{ borderColor: config.visible ? config.color : undefined }}\n                >\n                  <span \n                    className=\"inline-block w-2 h-2 rounded-full mr-1\" \n                    style={{ backgroundColor: config.color }}\n                  />\n                  {key.toUpperCase()}\n                </button>\n                <button\n                  onClick={() => toggleIndicatorVisibility(key)}\n                  className=\"p-1 text-gray-400 hover:text-white\"\n                  title={config.visible ? 'Hide' : 'Show'}\n                >\n                  {config.visible ? (\n                    <EyeIcon className=\"w-3 h-3\" />\n                  ) : (\n                    <EyeSlashIcon className=\"w-3 h-3\" />\n                  )}\n                </button>\n              </div>\n            )\n          ))}\n        </div>\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"flex-1 relative\">\n        <div \n          ref={chartContainerRef}\n          className=\"absolute inset-0\"\n        />\n        \n        {/* Limit Order Overlays */}\n        {limitOrders.map((order, index) => (\n          <div\n            key={index}\n            className=\"absolute right-4 bg-yellow-600 text-white text-xs px-2 py-1 rounded\"\n            style={{ top: `${order.yPosition || 50}%` }}\n          >\n            Limit {order.type}: ${order.price}\n          </div>\n        ))}\n      </div>\n      \n      {/* Chart Footer */}\n      <div className=\"p-3 border-t border-gray-700 bg-gray-800\">\n        <div className=\"flex items-center justify-between text-xs text-gray-400\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Live</span>\n            <span>Interval: {timeframe}</span>\n            <span className=\"flex items-center\">\n              <span className=\"w-2 h-2 bg-green-400 rounded-full mr-1\"></span>\n              Connected\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <span>Signals: {tradeSignals.length}</span>\n            <span>Orders: {limitOrders.length}</span>\n            <span>Last: {new Date().toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradingChart;\n\n// Helper function to format numbers\nconst formatPrice = (price) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(price);\n};\n\n// Export for use in other components\nexport { formatPrice };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}